{"version":3,"sources":["redux/actionTypes.js","common/countries.js","workspace/common/CountrySelect.js","workspace/common/Lookup.js","workspace/common/FormsyTextField.js","workspace/common/RecordForm.js","server/api.js","common/crossStorage.js","redux/actions.js","layouts/AddDialog.js","layouts/MainToolbar.js","layouts/MainDrawer.js","workspace/configuration.js","error/configuration.js","routes.js","workspace/common/FormDrawer.js","workspace/api-key/APIKeyFormDrawer.js","layouts/MainLayout.js","layouts/index.js","common/PrimaryLayout.js","theme.js","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["NEW_API_KEY","NEW_ACCOUNT","FETCH_ACCOUNT_COMPLETE","FETCH_ACCOUNTS_COMPLETE","EDIT_ACCOUNT","CLEAR_ACCOUNT","NEW_SUBSCRIPTION","FETCH_SUBSCRIPTION_COMPLETE","FETCH_SUBSCRIPTIONS_COMPLETE","EDIT_SUBSCRIPTION","CLEAR_SUBSCRIPTION","NEW_INVOICE","FETCH_INVOICE_COMPLETE","FETCH_INVOICES_COMPLETE","EDIT_INVOICE","CLEAR_INVOICE","NEW_TRANSACTION","FETCH_TRANSACTION_COMPLETE","FETCH_TRANSACTIONS_COMPLETE","EDIT_TRANSACTION","CLEAR_TRANSACTION","NEW_PLAN","FETCH_PLAN_COMPLETE","FETCH_PLANS_COMPLETE","EDIT_PLAN","CLEAR_PLAN","FETCH_ANALYTICS_COMPLETE","CLOSE_DIALOG","SHOW_NOTIFICATION","CLOSE_NOTIFICATION","FETCH_USER_COMPLETE","FETCH_USER_FAILED","INTERNAL_REDIRECT","data","code","label","useStyles","makeStyles","option","fontSize","marginRight","withFormsy","props","fullWidth","required","onChange","value","classes","Autocomplete","options","countries","autoHighlight","getOptionLabel","renderOption","Fragment","isoCode","String","fromCodePoint","toUpperCase","replace","character","charCodeAt","renderInput","params","TextField","variant","inputProps","autoComplete","updateOptions","renderOptionLabel","name","React","useState","inputValue","setInputValue","onInputChange","event","reason","errorMessage","setValue","currentTarget","error","Boolean","helperText","client","newClient","theme","root","width","paddingRight","extraAction","textTransform","tabText","fontWeight","chips","display","flexWrap","chip","margin","field","marginBottom","extractValues","groups","result","forEach","group","children","type","identifier","defaultValue","startDate","endDate","apis","account_lookup","getAccounts","plan_lookup","getPlans","RecordForm","values","showMore","onValueChange","tabIndex","onValidityChange","contexts","context","text","a","api","search","this","setOptions","records","prepareLookupContexts","makeChangeHandler","target","makeRangeHandler","newValue","Object","assign","makeDateChangeHandler","which","date","format","makeLookupChangeHandler","getSelectedTitle","selected","find","title","utils","DateFnsUtils","onValid","onInvalid","className","Grid","container","direction","spacing","map","groupIndex","fieldIndex","quickAdd","key","item","xl","lg","md","sm","xs","Tooltip","tooltip","arrow","interactive","enterDelay","placement","id","size","validations","validationErrors","preventFirstValidation","color","multiline","rows","inputVariant","Date","FormGroup","FormControlLabel","control","Switch","FormControl","InputLabel","Select","labelId","MenuItem","startTitle","endTitle","renderSelect","multiple","renderValue","Chip","renderMultiSelect","searchText","userName","firstName","lastName","initializeAccount","account","createdAt","updatedAt","initializeSubscription","subscription","startsAt","activatedAt","cancelledAt","pausedAt","currentPeriodStart","currentPeriodEnd","initializeInvoice","invoice","closedAt","dueAt","items","i","length","startedAt","endedAt","initializeTransaction","transaction","initializePlan","plan","version","axios","defaults","baseURL","process","REACT_APP_API_URL","newAccount","post","response","saveAccount","put","getAccount","get","accounts","newSubscription","saveSubscription","getSubscription","getSubscriptions","subscriptions","saveInvoice","getInvoice","getInvoices","invoices","newTransaction","saveTransaction","getTransaction","getTransactions","transactions","newPlan","savePlan","getPlan","plans","getAnalytics","connection","crossStorage","CrossStorageClient","REACT_APP_WEBSITE_URL","onConnect","newCrossStorage","handleError","dispatch","message","console","log","JSON","parse","stringify","showNotification","newAPIKey","ActionTypes","payload","createAccount","fetchAccounts","fetchAccountsComplete","createSubscription","fetchSubscriptions","fetchSubscriptionsComplete","newInvoice","createTransaction","fetchTransactions","fetchTransactionsComplete","createPlan","fetchPlans","fetchPlansComplete","closeDialog","category","closeNotification","fetchUserComplete","user","fetchUser","logout","csClient","del","minHeight","minWidth","overflow","main","padding","groupTitle","backgroundColor","palette","primary","light","paddingLeft","marginTop","icon","marginLeft","link","textDecoration","add","background","borderRadius","cursor","linkTitle","textAlign","links","action","mapDispatchToProps","connect","onClose","open","anchor","makeHandler","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","index","onClick","Icon","Typography","logoButton","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","toolbar","hide","buttons","addButton","logoutButton","dispay","actions","state","withRouter","toggleDrawer","drawerOpen","addDialogAnchor","setAddDialogAnchor","AppBar","position","clsx","Toolbar","IconButton","edge","Button","flexShrink","whiteSpace","drawerClose","overflowX","alignItems","justifyContent","mixins","navigationGroups","useTheme","handleCloseDrawer","Drawer","paper","Divider","List","ListItem","button","url","history","push","ListItemIcon","ListItemText","workspaceConfiguration","path","component","lazy","exact","errorConfiguration","routes","to","flexDirection","breakpoints","down","rootWide","navigation","paddingTop","paddingBottom","listItem","content","overflowY","scrollbarWidth","contentWide","wideDrawerWidth","actionsWide","spring","flexGrow","FormDrawer","onSave","updateLookupOptions","setShowMore","setValues","setTabIndex","saveDisabled","setSaveDisabled","elevation","newValues","Box","boxShadow","disabled","requestValues","toRequest","dialogAction","defaultProps","readOnly","unique","hidden","multipleValues","APIKeyFormDrawer","onCancel","Alert","easeOut","contentShift","progress","maxWidth","maxHeight","suspense","top","left","layouts","openDialog","notification","setDrawerOpen","handleCloseNotification","fallback","CircularProgress","renderRoutes","Snackbar","autoHideDuration","SnackbarContent","severityMap","SUCCESS","ERROR","severity","renderNotification","withStyles","default","Layout","createMuiTheme","keys","dark","contrastText","secondary","shadows","typography","htmlFontSize","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","lineHeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","shape","easeInOut","easeIn","shortest","shorter","short","standard","complex","mobileStepper","speedDial","modal","snackbar","overrides","MuiInputLabel","MuiTooltip","nprogress","checking","checkingProgress","checkingText","isUserLoading","useEffect","CssBaseline","ThemeProvider","thickness","window","location","hostname","match","rootReducer","combineReducers","analytics","internalRedirect","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.76056f20.chunk.js","sourcesContent":["export const NEW_API_KEY = \"NEW_API_KEY\";\n\nexport const NEW_ACCOUNT = \"NEW_ACCOUNT\";\nexport const FETCH_ACCOUNT_COMPLETE = \"FETCH_ACCOUNT_COMPLETE\";\nexport const FETCH_ACCOUNTS_COMPLETE = \"FETCH_ACCOUNTS_COMPLETE\";\nexport const EDIT_ACCOUNT = \"EDIT_ACCOUNT\";\nexport const CLEAR_ACCOUNT = \"CLEAR_ACCOUNT\";\n\nexport const NEW_SUBSCRIPTION = \"NEW_SUBSCRIPTION\";\nexport const FETCH_SUBSCRIPTION_COMPLETE = \"FETCH_SUBSCRIPTION_COMPLETE\";\nexport const FETCH_SUBSCRIPTIONS_COMPLETE = \"FETCH_SUBSCRIPTIONS_COMPLETE\";\nexport const EDIT_SUBSCRIPTION = \"EDIT_SUBSCRIPTION\";\nexport const CLEAR_SUBSCRIPTION = \"CLEAR_SUBSCRIPTION\";\n\nexport const NEW_INVOICE = \"NEW_INVOICE\";\nexport const FETCH_INVOICE_COMPLETE = \"FETCH_INVOICE_COMPLETE\";\nexport const FETCH_INVOICES_COMPLETE = \"FETCH_INVOICES_COMPLETE\";\nexport const EDIT_INVOICE = \"EDIT_INVOICE\";\nexport const CLEAR_INVOICE = \"CLEAR_INVOICE\";\n\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\nexport const FETCH_TRANSACTION_COMPLETE = \"FETCH_TRANSACTION_COMPLETE\";\nexport const FETCH_TRANSACTIONS_COMPLETE = \"FETCH_TRANSACTIONS_COMPLETE\";\nexport const EDIT_TRANSACTION = \"EDIT_TRANSACTION\";\nexport const CLEAR_TRANSACTION = \"CLEAR_TRANSACTION\";\n\nexport const NEW_PLAN = \"NEW_PLAN\";\nexport const FETCH_PLAN_COMPLETE = \"FETCH_PLAN_COMPLETE\";\nexport const FETCH_PLANS_COMPLETE = \"FETCH_PLANS_COMPLETE\";\nexport const EDIT_PLAN = \"EDIT_PLAN\";\nexport const CLEAR_PLAN = \"CLEAR_PLAN\";\n\nexport const FETCH_ANALYTICS_COMPLETE = \"FETCH_ANALYTICS_COMPLETE\";\n\nexport const CLOSE_DIALOG = \"CLOSE_DIALOG\";\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\";\n\nexport const FETCH_USER_COMPLETE = \"FETCH_USER_COMPLETE\";\nexport const FETCH_USER_FAILED = \"FETCH_USER_FAILED\";\n\nexport const INTERNAL_REDIRECT = \"INTERNAL_REDIRECT\";\n","/* Source: https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js */\nexport const data = [\n    { code: \"AD\", label: \"Andorra\" },\n    { code: \"AE\", label: \"United Arab Emirates\" },\n    { code: \"AF\", label: \"Afghanistan\" },\n    { code: \"AG\", label: \"Antigua and Barbuda\" },\n    { code: \"AI\", label: \"Anguilla\" },\n    { code: \"AL\", label: \"Albania\" },\n    { code: \"AM\", label: \"Armenia\" },\n    { code: \"AO\", label: \"Angola\" },\n    { code: \"AQ\", label: \"Antarctica\" },\n    { code: \"AR\", label: \"Argentina\" },\n    { code: \"AS\", label: \"American Samoa\" },\n    { code: \"AT\", label: \"Austria\" },\n    { code: \"AU\", label: \"Australia\" },\n    { code: \"AW\", label: \"Aruba\" },\n    { code: \"AX\", label: \"Alland Islands\" },\n    { code: \"AZ\", label: \"Azerbaijan\" },\n    { code: \"BA\", label: \"Bosnia and Herzegovina\" },\n    { code: \"BB\", label: \"Barbados\" },\n    { code: \"BD\", label: \"Bangladesh\" },\n    { code: \"BE\", label: \"Belgium\" },\n    { code: \"BF\", label: \"Burkina Faso\" },\n    { code: \"BG\", label: \"Bulgaria\" },\n    { code: \"BH\", label: \"Bahrain\" },\n    { code: \"BI\", label: \"Burundi\" },\n    { code: \"BJ\", label: \"Benin\" },\n    { code: \"BL\", label: \"Saint Barthelemy\" },\n    { code: \"BM\", label: \"Bermuda\" },\n    { code: \"BN\", label: \"Brunei Darussalam\" },\n    { code: \"BO\", label: \"Bolivia\" },\n    { code: \"BR\", label: \"Brazil\" },\n    { code: \"BS\", label: \"Bahamas\" },\n    { code: \"BT\", label: \"Bhutan\" },\n    { code: \"BV\", label: \"Bouvet Island\" },\n    { code: \"BW\", label: \"Botswana\" },\n    { code: \"BY\", label: \"Belarus\" },\n    { code: \"BZ\", label: \"Belize\" },\n    { code: \"CA\", label: \"Canada\" },\n    { code: \"CC\", label: \"Cocos (Keeling) Islands\" },\n    { code: \"CD\", label: \"Congo, Democratic Republic of the\" },\n    { code: \"CF\", label: \"Central African Republic\" },\n    { code: \"CG\", label: \"Congo, Republic of the\" },\n    { code: \"CH\", label: \"Switzerland\" },\n    { code: \"CI\", label: \"Cote d'Ivoire\" },\n    { code: \"CK\", label: \"Cook Islands\" },\n    { code: \"CL\", label: \"Chile\" },\n    { code: \"CM\", label: \"Cameroon\" },\n    { code: \"CN\", label: \"China\" },\n    { code: \"CO\", label: \"Colombia\" },\n    { code: \"CR\", label: \"Costa Rica\" },\n    { code: \"CU\", label: \"Cuba\" },\n    { code: \"CV\", label: \"Cape Verde\" },\n    { code: \"CW\", label: \"Curacao\" },\n    { code: \"CX\", label: \"Christmas Island\" },\n    { code: \"CY\", label: \"Cyprus\" },\n    { code: \"CZ\", label: \"Czech Republic\" },\n    { code: \"DE\", label: \"Germany\" },\n    { code: \"DJ\", label: \"Djibouti\" },\n    { code: \"DK\", label: \"Denmark\" },\n    { code: \"DM\", label: \"Dominica\" },\n    { code: \"DO\", label: \"Dominican Republic\" },\n    { code: \"DZ\", label: \"Algeria\" },\n    { code: \"EC\", label: \"Ecuador\" },\n    { code: \"EE\", label: \"Estonia\" },\n    { code: \"EG\", label: \"Egypt\" },\n    { code: \"EH\", label: \"Western Sahara\" },\n    { code: \"ER\", label: \"Eritrea\" },\n    { code: \"ES\", label: \"Spain\" },\n    { code: \"ET\", label: \"Ethiopia\" },\n    { code: \"FI\", label: \"Finland\" },\n    { code: \"FJ\", label: \"Fiji\" },\n    { code: \"FK\", label: \"Falkland Islands (Malvinas)\" },\n    { code: \"FM\", label: \"Micronesia, Federated States of\" },\n    { code: \"FO\", label: \"Faroe Islands\" },\n    { code: \"FR\", label: \"France\" },\n    { code: \"GA\", label: \"Gabon\" },\n    { code: \"GB\", label: \"United Kingdom\" },\n    { code: \"GD\", label: \"Grenada\" },\n    { code: \"GE\", label: \"Georgia\" },\n    { code: \"GF\", label: \"French Guiana\" },\n    { code: \"GG\", label: \"Guernsey\" },\n    { code: \"GH\", label: \"Ghana\" },\n    { code: \"GI\", label: \"Gibraltar\" },\n    { code: \"GL\", label: \"Greenland\" },\n    { code: \"GM\", label: \"Gambia\" },\n    { code: \"GN\", label: \"Guinea\" },\n    { code: \"GP\", label: \"Guadeloupe\" },\n    { code: \"GQ\", label: \"Equatorial Guinea\" },\n    { code: \"GR\", label: \"Greece\" },\n    { code: \"GS\", label: \"South Georgia and the South Sandwich Islands\" },\n    { code: \"GT\", label: \"Guatemala\" },\n    { code: \"GU\", label: \"Guam\" },\n    { code: \"GW\", label: \"Guinea-Bissau\" },\n    { code: \"GY\", label: \"Guyana\" },\n    { code: \"HK\", label: \"Hong Kong\" },\n    { code: \"HM\", label: \"Heard Island and McDonald Islands\" },\n    { code: \"HN\", label: \"Honduras\" },\n    { code: \"HR\", label: \"Croatia\" },\n    { code: \"HT\", label: \"Haiti\" },\n    { code: \"HU\", label: \"Hungary\" },\n    { code: \"ID\", label: \"Indonesia\" },\n    { code: \"IE\", label: \"Ireland\" },\n    { code: \"IL\", label: \"Israel\" },\n    { code: \"IM\", label: \"Isle of Man\" },\n    { code: \"IN\", label: \"India\" },\n    { code: \"IO\", label: \"British Indian Ocean Territory\" },\n    { code: \"IQ\", label: \"Iraq\" },\n    { code: \"IR\", label: \"Iran, Islamic Republic of\" },\n    { code: \"IS\", label: \"Iceland\" },\n    { code: \"IT\", label: \"Italy\" },\n    { code: \"JE\", label: \"Jersey\" },\n    { code: \"JM\", label: \"Jamaica\" },\n    { code: \"JO\", label: \"Jordan\" },\n    { code: \"JP\", label: \"Japan\" },\n    { code: \"KE\", label: \"Kenya\" },\n    { code: \"KG\", label: \"Kyrgyzstan\" },\n    { code: \"KH\", label: \"Cambodia\" },\n    { code: \"KI\", label: \"Kiribati\" },\n    { code: \"KM\", label: \"Comoros\" },\n    { code: \"KN\", label: \"Saint Kitts and Nevis\" },\n    { code: \"KP\", label: \"Korea, Democratic People's Republic of\" },\n    { code: \"KR\", label: \"Korea, Republic of\" },\n    { code: \"KW\", label: \"Kuwait\" },\n    { code: \"KY\", label: \"Cayman Islands\" },\n    { code: \"KZ\", label: \"Kazakhstan\" },\n    { code: \"LA\", label: \"Lao People's Democratic Republic\" },\n    { code: \"LB\", label: \"Lebanon\" },\n    { code: \"LC\", label: \"Saint Lucia\" },\n    { code: \"LI\", label: \"Liechtenstein\" },\n    { code: \"LK\", label: \"Sri Lanka\" },\n    { code: \"LR\", label: \"Liberia\" },\n    { code: \"LS\", label: \"Lesotho\" },\n    { code: \"LT\", label: \"Lithuania\" },\n    { code: \"LU\", label: \"Luxembourg\" },\n    { code: \"LV\", label: \"Latvia\" },\n    { code: \"LY\", label: \"Libya\" },\n    { code: \"MA\", label: \"Morocco\" },\n    { code: \"MC\", label: \"Monaco\" },\n    { code: \"MD\", label: \"Moldova, Republic of\" },\n    { code: \"ME\", label: \"Montenegro\" },\n    { code: \"MF\", label: \"Saint Martin (French part)\" },\n    { code: \"MG\", label: \"Madagascar\" },\n    { code: \"MH\", label: \"Marshall Islands\" },\n    { code: \"MK\", label: \"Macedonia, the Former Yugoslav Republic of\" },\n    { code: \"ML\", label: \"Mali\" },\n    { code: \"MM\", label: \"Myanmar\" },\n    { code: \"MN\", label: \"Mongolia\" },\n    { code: \"MO\", label: \"Macao\" },\n    { code: \"MP\", label: \"Northern Mariana Islands\" },\n    { code: \"MQ\", label: \"Martinique\" },\n    { code: \"MR\", label: \"Mauritania\" },\n    { code: \"MS\", label: \"Montserrat\" },\n    { code: \"MT\", label: \"Malta\" },\n    { code: \"MU\", label: \"Mauritius\" },\n    { code: \"MV\", label: \"Maldives\" },\n    { code: \"MW\", label: \"Malawi\" },\n    { code: \"MX\", label: \"Mexico\" },\n    { code: \"MY\", label: \"Malaysia\" },\n    { code: \"MZ\", label: \"Mozambique\" },\n    { code: \"NA\", label: \"Namibia\" },\n    { code: \"NC\", label: \"New Caledonia\" },\n    { code: \"NE\", label: \"Niger\" },\n    { code: \"NF\", label: \"Norfolk Island\" },\n    { code: \"NG\", label: \"Nigeria\" },\n    { code: \"NI\", label: \"Nicaragua\" },\n    { code: \"NL\", label: \"Netherlands\" },\n    { code: \"NO\", label: \"Norway\" },\n    { code: \"NP\", label: \"Nepal\" },\n    { code: \"NR\", label: \"Nauru\" },\n    { code: \"NU\", label: \"Niue\" },\n    { code: \"NZ\", label: \"New Zealand\" },\n    { code: \"OM\", label: \"Oman\" },\n    { code: \"PA\", label: \"Panama\" },\n    { code: \"PE\", label: \"Peru\" },\n    { code: \"PF\", label: \"French Polynesia\" },\n    { code: \"PG\", label: \"Papua New Guinea\" },\n    { code: \"PH\", label: \"Philippines\" },\n    { code: \"PK\", label: \"Pakistan\" },\n    { code: \"PL\", label: \"Poland\" },\n    { code: \"PM\", label: \"Saint Pierre and Miquelon\" },\n    { code: \"PN\", label: \"Pitcairn\" },\n    { code: \"PR\", label: \"Puerto Rico\" },\n    { code: \"PS\", label: \"Palestine, State of\" },\n    { code: \"PT\", label: \"Portugal\" },\n    { code: \"PW\", label: \"Palau\" },\n    { code: \"PY\", label: \"Paraguay\" },\n    { code: \"QA\", label: \"Qatar\" },\n    { code: \"RE\", label: \"Reunion\" },\n    { code: \"RO\", label: \"Romania\" },\n    { code: \"RS\", label: \"Serbia\" },\n    { code: \"RU\", label: \"Russian Federation\" },\n    { code: \"RW\", label: \"Rwanda\" },\n    { code: \"SA\", label: \"Saudi Arabia\" },\n    { code: \"SB\", label: \"Solomon Islands\" },\n    { code: \"SC\", label: \"Seychelles\" },\n    { code: \"SD\", label: \"Sudan\" },\n    { code: \"SE\", label: \"Sweden\" },\n    { code: \"SG\", label: \"Singapore\" },\n    { code: \"SH\", label: \"Saint Helena\" },\n    { code: \"SI\", label: \"Slovenia\" },\n    { code: \"SJ\", label: \"Svalbard and Jan Mayen\" },\n    { code: \"SK\", label: \"Slovakia\" },\n    { code: \"SL\", label: \"Sierra Leone\" },\n    { code: \"SM\", label: \"San Marino\" },\n    { code: \"SN\", label: \"Senegal\" },\n    { code: \"SO\", label: \"Somalia\" },\n    { code: \"SR\", label: \"Suriname\" },\n    { code: \"SS\", label: \"South Sudan\" },\n    { code: \"ST\", label: \"Sao Tome and Principe\" },\n    { code: \"SV\", label: \"El Salvador\" },\n    { code: \"SX\", label: \"Sint Maarten (Dutch part)\" },\n    { code: \"SY\", label: \"Syrian Arab Republic\" },\n    { code: \"SZ\", label: \"Swaziland\" },\n    { code: \"TC\", label: \"Turks and Caicos Islands\" },\n    { code: \"TD\", label: \"Chad\" },\n    { code: \"TF\", label: \"French Southern Territories\" },\n    { code: \"TG\", label: \"Togo\" },\n    { code: \"TH\", label: \"Thailand\" },\n    { code: \"TJ\", label: \"Tajikistan\" },\n    { code: \"TK\", label: \"Tokelau\" },\n    { code: \"TL\", label: \"Timor-Leste\" },\n    { code: \"TM\", label: \"Turkmenistan\" },\n    { code: \"TN\", label: \"Tunisia\" },\n    { code: \"TO\", label: \"Tonga\" },\n    { code: \"TR\", label: \"Turkey\" },\n    { code: \"TT\", label: \"Trinidad and Tobago\" },\n    { code: \"TV\", label: \"Tuvalu\" },\n    { code: \"TW\", label: \"Taiwan, Province of China\" },\n    { code: \"TZ\", label: \"United Republic of Tanzania\" },\n    { code: \"UA\", label: \"Ukraine\" },\n    { code: \"UG\", label: \"Uganda\" },\n    { code: \"US\", label: \"United States\" },\n    { code: \"UY\", label: \"Uruguay\" },\n    { code: \"UZ\", label: \"Uzbekistan\" },\n    { code: \"VA\", label: \"Holy See (Vatican City State)\" },\n    { code: \"VC\", label: \"Saint Vincent and the Grenadines\" },\n    { code: \"VE\", label: \"Venezuela\" },\n    { code: \"VG\", label: \"British Virgin Islands\" },\n    { code: \"VI\", label: \"US Virgin Islands\" },\n    { code: \"VN\", label: \"Vietnam\" },\n    { code: \"VU\", label: \"Vanuatu\" },\n    { code: \"WF\", label: \"Wallis and Futuna\" },\n    { code: \"WS\", label: \"Samoa\" },\n    { code: \"XK\", label: \"Kosovo\" },\n    { code: \"YE\", label: \"Yemen\" },\n    { code: \"YT\", label: \"Mayotte\" },\n    { code: \"ZA\", label: \"South Africa\" },\n    { code: \"ZM\", label: \"Zambia\" },\n    { code: \"ZW\", label: \"Zimbabwe\" },\n];\n\nfunction binarySearch(array, value, comparator) {\n    let high = array.length - 1;\n    let low = 0;\n\n    if (value < array[low]) {\n        return -1;\n    }\n\n    if (value > array[high]) {\n        return -(high + 1);\n    }\n\n    let middle;\n    while (high >= low) {\n        middle = (high + low) >> 1;\n\n        if (comparator(array, value, middle) === 0) {\n            return middle;\n        } else if (comparator(array, value, middle) > 0) {\n            high = middle - 1;\n        } else {\n            low = middle + 1;\n        }\n    }\n\n    return -(middle + 1);\n}\n\nexport function findCountryByCode(code) {\n    const index = binarySearch(data, code, (array, value, middle) => {\n        console.log(\"CM\");\n        console.log(array[middle], value);\n        return value < array[middle].code\n            ? -1\n            : value > array[middle].code\n            ? 1\n            : 0;\n    });\n    return index >= 0 ? data[index] : undefined;\n}\n","/* eslint-disable no-use-before-define */\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withFormsy } from \"formsy-react\";\nimport { data as countries } from \"../../common/countries\";\n\n/* ISO 3166-1 alpha-2\n * ⚠️ No support for IE 11\n */\nfunction countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== \"undefined\"\n        ? isoCode\n              .toUpperCase()\n              .replace(/./g, (character) =>\n                  String.fromCodePoint(character.charCodeAt(0) + 127397)\n              )\n        : isoCode;\n}\n\nconst useStyles = makeStyles({\n    option: {\n        fontSize: 16,\n        \"& > span\": {\n            marginRight: 8,\n            fontSize: 18,\n        },\n    },\n});\n\nfunction CountrySelect(props) {\n    const { fullWidth, label, required, onChange, value } = props;\n    const classes = useStyles();\n\n    return (\n        <Autocomplete\n            fullWidth={fullWidth}\n            required={required}\n            options={countries}\n            classes={{\n                option: classes.option,\n            }}\n            autoHighlight={true}\n            getOptionLabel={(option) => option.label}\n            renderOption={(option) => (\n                <React.Fragment>\n                    <span>{countryToFlag(option.code)}</span>\n                    {option.label}\n                </React.Fragment>\n            )}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={label}\n                    variant=\"outlined\"\n                    inputProps={{\n                        ...params.inputProps,\n                        autoComplete:\n                            \"new-password\" /* Disable autocomplete and autofill */,\n                    }}\n                />\n            )}\n            onChange={onChange}\n            value={value}\n        />\n    );\n}\n\nexport default withFormsy(CountrySelect);\n","/* eslint-disable no-use-before-define */\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withFormsy } from \"formsy-react\";\n\nconst useStyles = makeStyles({\n    option: {},\n});\n\nfunction Lookup(props) {\n    const {\n        label,\n        options,\n        updateOptions,\n        value,\n        onChange,\n        renderOption,\n        renderOptionLabel,\n        name,\n        required,\n    } = props;\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState(\"\");\n\n    return (\n        <Autocomplete\n            fullWidth={true}\n            options={options}\n            classes={{\n                option: classes.option,\n            }}\n            autoHighlight={true}\n            getOptionLabel={renderOptionLabel}\n            renderOption={renderOption}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={label}\n                    variant=\"outlined\"\n                    inputProps={{\n                        ...params.inputProps,\n                        autoComplete:\n                            \"off\" /* Disable autocomplete and autofill */,\n                    }}\n                    required={required}\n                    name={name}\n                />\n            )}\n            onInputChange={(event, inputValue, reason) => {\n                if (reason === \"input\") {\n                    // Convert empty strings to null.\n                    updateOptions(inputValue ? inputValue : null);\n                }\n                setInputValue(inputValue);\n            }}\n            inputValue={inputValue}\n            onChange={onChange}\n            value={value}\n        />\n    );\n}\n\nexport default withFormsy(Lookup);\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { withFormsy } from \"formsy-react\";\n\nfunction FormsyTextField(props) {\n    const errorMessage = props.errorMessage;\n    const value = props.value || \"\";\n\n    const changeValue = (event) => {\n        props.setValue(event.currentTarget.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    };\n\n    return (\n        <TextField\n            {...props}\n            onChange={changeValue}\n            value={value}\n            error={Boolean(errorMessage)}\n            helperText={errorMessage}\n        />\n    );\n}\n\nexport default withFormsy(FormsyTextField);\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { format } from \"date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n    KeyboardTimePicker,\n    KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CountrySelect from \"./CountrySelect\";\nimport Lookup from \"./Lookup\";\nimport FormsyTextField from \"./FormsyTextField\";\nimport { newClient } from \"../../server/api\";\nimport Formsy from \"formsy-react\";\nimport ColorPicker from \"material-ui-color-picker\";\n\n// TODO: URL, checkbox\n\nconst client = newClient();\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        paddingRight: 16,\n    },\n    extraAction: {\n        textTransform: \"none\",\n    },\n    tabText: {\n        fontWeight: 600,\n        fontSize: 13,\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n        fontWeight: 500,\n    },\n    field: {\n        /*maginLeft: 16,\n        marginRight: 16,*/\n        marginBottom: 12,\n    },\n}));\n\n// const options = [{ firstName: \"Hello\", lastName: \"World\", userName: \"hello\" }];\n\n// date_range_picker, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, contact\n\n/* The form configuration is basically an array of groups. Each group consists two attributes - `label`,\n * which is rendered on the left when you click `Shore More`, and `children` which is an array of objects\n * that describe fields. Whatever attribute is in the field configuration is accessible as\n * `field.attributeName` in `RecordForm`.\n */\n\nexport function extractValues(groups) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            if (field.type === \"date_range\") {\n                result[field.identifier] = {\n                    option: field.defaultValue.option,\n                    startDate: field.defaultValue.startDate,\n                    endDate: field.defaultValue.endDate,\n                };\n            } else if (field.type === \"multi_select\") {\n                result[field.identifier] = [...field.defaultValue];\n            } else {\n                result[field.identifier] = field.defaultValue;\n            }\n        });\n    });\n    return result;\n}\n\nconst apis = {\n    account_lookup: client.getAccounts,\n    plan_lookup: client.getPlans,\n};\n\nfunction prepareLookupContexts(groups) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            if (field.type in apis) {\n                const context = {\n                    updateOptions: async function (field, text) {\n                        if (text) {\n                            const api = apis[field.type];\n                            const data = await api({\n                                search: text,\n                            });\n                            this.setOptions(data.records);\n                        } else {\n                            this.setOptions([]);\n                        }\n                    },\n                };\n                const [options, setOptions] = useState([]);\n                context.options = options;\n                context.setOptions = setOptions;\n                result[field.identifier] = context;\n            }\n        });\n    });\n    return result;\n}\n\nexport default function RecordForm(props) {\n    const {\n        values,\n        groups,\n        showMore,\n        onValueChange,\n        tabIndex,\n        onValidityChange,\n    } = props;\n    const classes = useStyles(props);\n    const contexts = prepareLookupContexts(groups);\n\n    const makeChangeHandler = (field) => (event) => {\n        onValueChange(field, event.target.value);\n    };\n\n    const makeRangeHandler = (field) => (event) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        newValue.option = event.target.value;\n        onValueChange(field, newValue);\n    };\n\n    const makeDateChangeHandler = (field, which) => (date) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        // ISO format\n        newValue[which] = format(date, \"yyyy/MM/dd\");\n        onValueChange(field, newValue);\n    };\n\n    const makeLookupChangeHandler = (field) => (event, value) => {\n        onValueChange(field, value ? Object.assign({}, value) : null);\n    };\n\n    const renderSelect = (field) => (\n        <FormControl\n            variant=\"outlined\"\n            fullWidth={true}\n            size=\"small\"\n            required={field.required}\n        >\n            <InputLabel id={field.identifier}>{field.label}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={values[field.identifier]}\n                onChange={makeChangeHandler(field)}\n                label={field.label}\n                name={field.identifier}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    const getSelectedTitle = (field, selected) => {\n        return field.options.find((option) => option.value === selected).title;\n    };\n\n    const renderMultiSelect = (field) => (\n        <FormControl variant=\"outlined\" fullWidth={true} size=\"small\">\n            <InputLabel id={field.identifier}>{field.label}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={values[field.identifier]}\n                multiple={true}\n                onChange={makeChangeHandler(field)}\n                label={field.label}\n                name={field.identifier}\n                renderValue={(selected) => (\n                    <div>\n                        {selected.map((value) => (\n                            <Chip\n                                value={selected}\n                                label={getSelectedTitle(field, value)}\n                                className={classes.chip}\n                            />\n                        ))}\n                    </div>\n                )}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Formsy\n                onValid={() => onValidityChange(false)}\n                onInvalid={() => onValidityChange(true)}\n                className={classes.root}\n            >\n                <Grid container={true} direction=\"row\" spacing={1}>\n                    {groups.map((group, groupIndex) =>\n                        group.children.map((field, fieldIndex) =>\n                            (!showMore && field.quickAdd) ||\n                            (showMore && groupIndex === tabIndex) ? (\n                                <Grid\n                                    key={field.identifier}\n                                    item={true}\n                                    xl={\n                                        field.xl ||\n                                        field.lg ||\n                                        field.md ||\n                                        field.sm ||\n                                        field.xs ||\n                                        12\n                                    }\n                                    lg={\n                                        field.lg ||\n                                        field.md ||\n                                        field.sm ||\n                                        field.xs ||\n                                        12\n                                    }\n                                    md={field.md || field.sm || field.xs || 12}\n                                    sm={field.sm || field.xs || 12}\n                                    xs={field.xs || 12}\n                                    className={classes.field}\n                                >\n                                    <Tooltip\n                                        title={field.tooltip}\n                                        arrow={true}\n                                        interactive={false}\n                                        enterDelay={500}\n                                        placement=\"left\"\n                                    >\n                                        <div>\n                                            {field.type === \"text\" && (\n                                                <FormsyTextField\n                                                    label={field.label}\n                                                    id={field.identifier}\n                                                    name={field.identifier}\n                                                    type=\"text\"\n                                                    variant=\"outlined\"\n                                                    fullWidth={true}\n                                                    required={field.required}\n                                                    onChange={makeChangeHandler(\n                                                        field\n                                                    )}\n                                                    size=\"small\"\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    preventFirstValidation={\n                                                        true\n                                                    }\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                />\n                                            )}\n\n                                            {field.type === \"color\" && (\n                                                <ColorPicker\n                                                    label={field.label}\n                                                    id={field.identifier}\n                                                    name={field.identifier}\n                                                    variant=\"outlined\"\n                                                    fullWidth={true}\n                                                    required={field.required}\n                                                    defaultValue={\n                                                        values[field.identifier]\n                                                    }\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={(color) => {\n                                                        onValueChange(\n                                                            field,\n                                                            color\n                                                        );\n                                                    }}\n                                                    size=\"small\"\n                                                    inputProps={{\n                                                        autoComplete:\n                                                            \"off\" /* Disable autocomplete and autofill */,\n                                                    }}\n                                                />\n                                            )}\n\n                                            {field.type === \"password\" && (\n                                                <FormsyTextField\n                                                    label={field.label}\n                                                    id={field.identifier}\n                                                    name={field.identifier}\n                                                    type=\"password\"\n                                                    variant=\"outlined\"\n                                                    fullWidth={true}\n                                                    required={field.required}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={makeChangeHandler(\n                                                        field\n                                                    )}\n                                                    size=\"small\"\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    preventFirstValidation={\n                                                        true\n                                                    }\n                                                />\n                                            )}\n\n                                            {field.type === \"large_text\" && (\n                                                <FormsyTextField\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    type=\"text\"\n                                                    multiline={true}\n                                                    rows={field.rows || 4}\n                                                    fullWidth={true}\n                                                    variant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={makeChangeHandler(\n                                                        field\n                                                    )}\n                                                    size=\"small\"\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    preventFirstValidation={\n                                                        true\n                                                    }\n                                                />\n                                            )}\n\n                                            {field.type === \"number\" && (\n                                                <FormsyTextField\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    type=\"number\"\n                                                    fullWidth={true}\n                                                    variant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={makeChangeHandler(\n                                                        field\n                                                    )}\n                                                    size=\"small\"\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    preventFirstValidation={\n                                                        true\n                                                    }\n                                                />\n                                            )}\n\n                                            {field.type === \"date\" && (\n                                                <KeyboardDatePicker\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    format=\"MM/dd/yyyy\"\n                                                    fullWidth={true}\n                                                    inputVariant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        !values[\n                                                            field.identifier\n                                                        ]\n                                                            ? new Date()\n                                                            : new Date(\n                                                                  values[\n                                                                      field.identifier\n                                                                  ]\n                                                              )\n                                                    }\n                                                    onChange={(value) =>\n                                                        onValueChange(\n                                                            field,\n                                                            value\n                                                        )\n                                                    }\n                                                    size=\"small\"\n                                                />\n                                            )}\n\n                                            {field.type === \"time\" && (\n                                                <KeyboardTimePicker\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    fullWidth={true}\n                                                    inputVariant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        !values[\n                                                            field.identifier\n                                                        ]\n                                                            ? new Date()\n                                                            : new Date(\n                                                                  values[\n                                                                      field.identifier\n                                                                  ]\n                                                              )\n                                                    }\n                                                    onChange={(value) =>\n                                                        onValueChange(\n                                                            field,\n                                                            value\n                                                        )\n                                                    }\n                                                    size=\"small\"\n                                                />\n                                            )}\n\n                                            {field.type === \"date_time\" && (\n                                                <KeyboardDateTimePicker\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    fullWidth={true}\n                                                    inputVariant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        !values[\n                                                            field.identifier\n                                                        ]\n                                                            ? new Date()\n                                                            : new Date(\n                                                                  values[\n                                                                      field.identifier\n                                                                  ]\n                                                              )\n                                                    }\n                                                    onChange={(value) =>\n                                                        onValueChange(\n                                                            field,\n                                                            value\n                                                        )\n                                                    }\n                                                    size=\"small\"\n                                                    format=\"MM/dd/yyyy, hh:mm a\"\n                                                />\n                                            )}\n\n                                            {field.type === \"switch\" && (\n                                                <FormGroup>\n                                                    <FormControlLabel\n                                                        id={field.identifier}\n                                                        label={field.label}\n                                                        name={field.identifier}\n                                                        control={<Switch />}\n                                                        required={\n                                                            field.required\n                                                        }\n                                                        value={\n                                                            values[\n                                                                field.identifier\n                                                            ]\n                                                        }\n                                                        onChange={makeChangeHandler(\n                                                            field\n                                                        )}\n                                                    />\n                                                </FormGroup>\n                                            )}\n\n                                            {field.type === \"date_range\" && (\n                                                <div>\n                                                    <FormControl\n                                                        variant=\"outlined\"\n                                                        fullWidth={true}\n                                                        size=\"small\"\n                                                    >\n                                                        <InputLabel\n                                                            id={\n                                                                field.identifier\n                                                            }\n                                                        >\n                                                            {field.title}\n                                                        </InputLabel>\n                                                        <Select\n                                                            name={\n                                                                field.identifier\n                                                            }\n                                                            labelId={\n                                                                field.identifier\n                                                            }\n                                                            value={\n                                                                values[\n                                                                    field\n                                                                        .identifier\n                                                                ].option\n                                                            }\n                                                            onChange={makeRangeHandler(\n                                                                field\n                                                            )}\n                                                            label={field.title}\n                                                        >\n                                                            {field.options.map(\n                                                                (option) => (\n                                                                    <MenuItem\n                                                                        value={\n                                                                            option.value\n                                                                        }\n                                                                    >\n                                                                        {\n                                                                            option.title\n                                                                        }\n                                                                    </MenuItem>\n                                                                )\n                                                            )}\n                                                        </Select>\n                                                    </FormControl>\n                                                    {values[field.identifier]\n                                                        .option ===\n                                                        \"custom\" && (\n                                                        <React.Fragment>\n                                                            <KeyboardDatePicker\n                                                                margin=\"normal\"\n                                                                id={\n                                                                    field.identifier +\n                                                                    \"Start\"\n                                                                }\n                                                                label={\n                                                                    field.startTitle\n                                                                }\n                                                                format=\"MM/dd/yyyy\"\n                                                                inputVariant=\"outlined\"\n                                                                fullWidth={true}\n                                                                name={\n                                                                    field.identifier +\n                                                                    \"Start\"\n                                                                }\n                                                                size=\"small\"\n                                                                value={\n                                                                    !values[\n                                                                        field\n                                                                            .identifier\n                                                                    ].startDate\n                                                                        ? new Date()\n                                                                        : new Date(\n                                                                              values[\n                                                                                  field.identifier\n                                                                              ].startDate\n                                                                          )\n                                                                }\n                                                                onChange={makeDateChangeHandler(\n                                                                    field,\n                                                                    \"startDate\"\n                                                                )}\n                                                            />\n                                                            <KeyboardDatePicker\n                                                                margin=\"normal\"\n                                                                name={\n                                                                    field.identifier +\n                                                                    \"End\"\n                                                                }\n                                                                id={\n                                                                    field.identifier +\n                                                                    \"End\"\n                                                                }\n                                                                label={\n                                                                    field.endTitle\n                                                                }\n                                                                format=\"MM/dd/yyyy\"\n                                                                inputVariant=\"outlined\"\n                                                                fullWidth={true}\n                                                                size=\"small\"\n                                                                value={\n                                                                    !values[\n                                                                        field\n                                                                            .identifier\n                                                                    ].endDate\n                                                                        ? new Date()\n                                                                        : new Date(\n                                                                              values[\n                                                                                  field.identifier\n                                                                              ].endDate\n                                                                          )\n                                                                }\n                                                                onChange={makeDateChangeHandler(\n                                                                    field,\n                                                                    \"endDate\"\n                                                                )}\n                                                            />\n                                                        </React.Fragment>\n                                                    )}\n                                                </div>\n                                            )}\n\n                                            {field.type === \"select\" &&\n                                                renderSelect(field)}\n\n                                            {field.type === \"multi_select\" &&\n                                                renderMultiSelect(field)}\n\n                                            {field.type === \"email_address\" && (\n                                                <FormsyTextField\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    type=\"text\"\n                                                    fullWidth={true}\n                                                    variant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={makeChangeHandler(\n                                                        field\n                                                    )}\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    size=\"small\"\n                                                />\n                                            )}\n\n                                            {field.type === \"phone_number\" && (\n                                                <FormsyTextField\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    type=\"text\"\n                                                    fullWidth={true}\n                                                    variant=\"outlined\"\n                                                    required={field.required}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={makeChangeHandler(\n                                                        field\n                                                    )}\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    size=\"small\"\n                                                    preventFirstValidation={\n                                                        true\n                                                    }\n                                                />\n                                            )}\n\n                                            {field.type === \"country\" && (\n                                                <CountrySelect\n                                                    id={field.identifier}\n                                                    label={field.label}\n                                                    name={field.identifier}\n                                                    fullWidth={true}\n                                                    required={field.required}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    onChange={makeLookupChangeHandler(\n                                                        field\n                                                    )}\n                                                    validations={\n                                                        field.validations\n                                                    }\n                                                    validationErrors={\n                                                        field.validationErrors\n                                                    }\n                                                    size=\"small\"\n                                                    preventFirstValidation={\n                                                        true\n                                                    }\n                                                />\n                                            )}\n\n                                            {field.type ===\n                                                \"account_lookup\" && (\n                                                <Lookup\n                                                    label={field.label}\n                                                    options={\n                                                        contexts[\n                                                            field.identifier\n                                                        ].options\n                                                    }\n                                                    updateOptions={(\n                                                        searchText\n                                                    ) =>\n                                                        contexts[\n                                                            field.identifier\n                                                        ].updateOptions(\n                                                            field,\n                                                            searchText\n                                                        )\n                                                    }\n                                                    onChange={makeLookupChangeHandler(\n                                                        field\n                                                    )}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    renderOptionLabel={(\n                                                        option\n                                                    ) => `${option.userName}`}\n                                                    renderOption={(option) => (\n                                                        <React.Fragment>\n                                                            {`${option.userName} • ${option.firstName} ${option.lastName}`}\n                                                        </React.Fragment>\n                                                    )}\n                                                    name={field.identifier}\n                                                    required={field.required}\n                                                />\n                                            )}\n\n                                            {field.type === \"plan_lookup\" && (\n                                                <Lookup\n                                                    label={field.label}\n                                                    options={\n                                                        contexts[\n                                                            field.identifier\n                                                        ].options\n                                                    }\n                                                    updateOptions={(\n                                                        searchText\n                                                    ) =>\n                                                        contexts[\n                                                            field.identifier\n                                                        ].updateOptions(\n                                                            field,\n                                                            searchText\n                                                        )\n                                                    }\n                                                    onChange={makeLookupChangeHandler(\n                                                        field\n                                                    )}\n                                                    value={\n                                                        values[field.identifier]\n                                                    }\n                                                    renderOptionLabel={(\n                                                        option\n                                                    ) => `${option.name}`}\n                                                    renderOption={(option) => (\n                                                        <React.Fragment>\n                                                            {`${option.code} • ${option.name}`}\n                                                        </React.Fragment>\n                                                    )}\n                                                    name={field.identifier}\n                                                    required={field.required}\n                                                />\n                                            )}\n                                        </div>\n                                    </Tooltip>\n                                </Grid>\n                            ) : null\n                        )\n                    )}\n                </Grid>\n            </Formsy>\n        </MuiPickersUtilsProvider>\n    );\n}\n","import axios from \"axios\";\n\nconst DEFAULT_API_VERSION = \"v1\";\n\nfunction initializeAccount(account) {\n    account.createdAt = new Date(account.createdAt);\n    account.updatedAt = new Date(account.updatedAt);\n    return account;\n}\n\nfunction initializeSubscription(subscription) {\n    const {\n        startsAt,\n        activatedAt,\n        cancelledAt,\n        pausedAt,\n        currentPeriodStart,\n        currentPeriodEnd,\n        createdAt,\n        updatedAt,\n    } = subscription;\n\n    subscription.startsAt = new Date(startsAt);\n    subscription.activatedAt = activatedAt ? new Date(activatedAt) : null;\n    subscription.cancelledAt = cancelledAt ? new Date(cancelledAt) : null;\n    subscription.pausedAt = pausedAt ? new Date(pausedAt) : null;\n    subscription.currentPeriodStart = currentPeriodStart\n        ? new Date(currentPeriodStart)\n        : null;\n    subscription.currentPeriodEnd = currentPeriodEnd\n        ? new Date(currentPeriodEnd)\n        : null;\n    subscription.createdAt = new Date(createdAt);\n    subscription.updatedAt = new Date(updatedAt);\n\n    return subscription;\n}\n\nfunction initializeInvoice(invoice) {\n    const { closedAt, dueAt, updatedAt, createdAt, items } = invoice;\n    invoice.closedAt = closedAt ? new Date(closedAt) : null;\n    invoice.dueAt = new Date(dueAt);\n    invoice.updatedAt = new Date(updatedAt);\n    invoice.createdAt = new Date(createdAt);\n\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        item.startedAt = new Date(item.startedAt);\n        item.endedAt = new Date(item.endedAt);\n    }\n\n    return invoice;\n}\n\nfunction initializeTransaction(transaction) {\n    transaction.createdAt = new Date(transaction.createdAt);\n    transaction.updatedAt = new Date(transaction.updatedAt);\n\n    return transaction;\n}\n\nfunction initializePlan(plan) {\n    plan.createdAt = new Date(plan.createdAt);\n    plan.updatedAt = new Date(plan.updatedAt);\n\n    return plan;\n}\n\nexport function newClient(version = DEFAULT_API_VERSION) {\n    axios.defaults.baseURL = `${process.env.REACT_APP_API_URL}/api/${version}`;\n\n    return {\n        // Account\n\n        newAccount: async (account) => {\n            const response = await axios.post(`/accounts`, account);\n            return initializeAccount(response.data);\n        },\n\n        saveAccount: async (account) => {\n            const response = await axios.put(\n                `/accounts/${account.id}`,\n                account\n            );\n            return initializeAccount(response.data);\n        },\n\n        getAccount: async (id) => {\n            const response = await axios.get(`/accounts/${id}`);\n            return initializeAccount(response.data);\n        },\n\n        getAccounts: async (params) => {\n            const response = await axios.get(`/accounts`, { params });\n            const accounts = response.data;\n            const { records } = accounts;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeAccount(records[i]);\n            }\n            return accounts;\n        },\n\n        // Subscription\n        newSubscription: async (subscription) => {\n            const response = await axios.post(`/subscriptions`, subscription);\n            return initializeSubscription(response.data);\n        },\n\n        saveSubscription: async (subscription) => {\n            const response = await axios.put(\n                `/subscriptions/${subscription.id}`,\n                subscription\n            );\n            return initializeSubscription(response.data);\n        },\n\n        getSubscription: async (id) => {\n            const response = await axios.get(`/subscriptions/${id}`);\n            return initializeSubscription(response.data);\n        },\n\n        getSubscriptions: async (params) => {\n            const response = await axios.get(`/subscriptions`, { params });\n            const subscriptions = response.data;\n            const { records } = subscriptions;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeSubscription(records[i]);\n            }\n            return subscriptions;\n        },\n\n        // Invoice\n        saveInvoice: async (invoice) => {\n            const response = await axios.put(\n                `/invoices/${invoice.id}`,\n                invoice\n            );\n            return initializeInvoice(response.data);\n        },\n\n        getInvoice: async (id) => {\n            const response = await axios.get(`/invoices/${id}`);\n            return initializeInvoice(response.data);\n        },\n\n        getInvoices: async (params) => {\n            const response = await axios.get(`/invoices`, { params });\n            const invoices = response.data;\n            const { records } = invoices;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeInvoice(records[i]);\n            }\n            return invoices;\n        },\n\n        // Transaction\n        newTransaction: async (transaction) => {\n            const response = await axios.post(`/transactions`, transaction);\n            return initializeTransaction(response.data);\n        },\n\n        saveTransaction: async (transaction) => {\n            const response = await axios.put(\n                `/transactions/${transaction.id}`,\n                transaction\n            );\n            return initializeTransaction(response.data);\n        },\n\n        getTransaction: async (id) => {\n            const response = await axios.get(`/transactions/${id}`);\n            return initializeTransaction(response.data);\n        },\n\n        getTransactions: async (params) => {\n            const response = await axios.get(`/transactions`, { params });\n            const transactions = response.data;\n            const { records } = transactions;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeTransaction(records[i]);\n            }\n            return transactions;\n        },\n\n        // Plan\n\n        newPlan: async (plan) => {\n            const response = await axios.post(`/plans`, plan);\n            return initializePlan(response);\n        },\n\n        savePlan: async (plan) => {\n            const response = await axios.put(`/plans/${plan.id}`, plan);\n            return initializePlan(response);\n        },\n\n        getPlan: async (id) => {\n            const response = await axios.get(`/plans/${id}`);\n            return initializePlan(response.data);\n        },\n\n        getPlans: async (params) => {\n            const response = await axios.get(`/plans`, { params });\n            const plans = response.data;\n            const { records } = plans;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializePlan(records[i]);\n            }\n            return plans;\n        },\n\n        // Analytics\n        getAnalytics: (params) => axios.get(`/analytics`, { params }),\n    };\n}\n","import crossStorage from \"cross-storage\";\n\nconst newCrossStorage = async () => {\n    const result = new crossStorage.CrossStorageClient(\n        `${process.env.REACT_APP_WEBSITE_URL}/hub.html`\n    );\n    await result.onConnect();\n    return result;\n};\n\nexport default {\n    connection: newCrossStorage(),\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { newClient } from \"../server/api\";\nimport crossStorage from \"../common/crossStorage\";\n\nconst client = newClient();\n\nfunction handleError(dispatch, error, message) {\n    /* By default, if an instance of the Error class is printed, a lot of information is hidden.\n     * Therefore, we convert it to a regular object and then print it.\n     */\n    console.log(error);\n    console.log(JSON.parse(JSON.stringify(error)));\n    let action;\n    if (error.response) {\n        // Assuming that we receive a JSON.\n        action = showNotification(\n            error.response.data.message || message,\n            \"ERROR\"\n        );\n    } else {\n        action = showNotification(message, \"ERROR\");\n    }\n    dispatch(action);\n}\n\nexport function newAPIKey() {\n    return {\n        type: ActionTypes.NEW_API_KEY,\n        payload: null,\n    };\n}\n\n/* ACCOUNT\n *  1. newAccount()\n *  2. createAccount()\n *  3. saveAccount()\n *  4. fetchAccountComplete()\n *  5. fetchAccount()\n *  6. fetchAccountsComplete()\n *  7. fetchAccounts()\n *  8. editAccount()\n *  9. clearAccount()\n */\n\nexport function newAccount() {\n    return {\n        type: ActionTypes.NEW_ACCOUNT,\n        payload: null,\n    };\n}\n\n// TODO: Error boundaries\nexport function createAccount(account) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving account...\", \"LOADING\"));\n            await client.newAccount(account);\n            dispatch(fetchAccounts({}));\n            dispatch(\n                showNotification(\"Successfully created account\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create account\");\n        }\n    };\n}\n\nexport function saveAccount(account) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving account...\", \"LOADING\"));\n            const newAccount = await client.saveAccount(account);\n            dispatch(fetchAccounts({}));\n            dispatch(fetchAccountComplete(newAccount));\n            dispatch(showNotification(\"Successfully saved account\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save account\");\n        }\n    };\n}\n\nexport function fetchAccountComplete(account) {\n    return {\n        type: ActionTypes.FETCH_ACCOUNT_COMPLETE,\n        payload: account,\n    };\n}\n\nexport function fetchAccount(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading account...', 'LOADING'));\n            const account = await client.getAccount(id);\n            dispatch(fetchAccountComplete(account));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch account\");\n        }\n    };\n}\n\nexport function fetchAccountsComplete(accounts) {\n    return {\n        type: ActionTypes.FETCH_ACCOUNTS_COMPLETE,\n        payload: accounts,\n    };\n}\n\nexport function fetchAccounts(params) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading accounts...', 'LOADING'));\n            const accounts = await client.getAccounts(params);\n            dispatch(fetchAccountsComplete(accounts));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch accounts\");\n        }\n    };\n}\n\nexport function editAccount(account) {\n    return {\n        type: ActionTypes.EDIT_ACCOUNT,\n        payload: account,\n    };\n}\n\nexport function clearAccount() {\n    return {\n        type: ActionTypes.CLEAR_ACCOUNT,\n        payload: null,\n    };\n}\n\n/* SUBSCRIPTION\n *  1. newSubscription()\n *  2. createSubscription()\n *  3. saveSubscription() -> TODO\n *  4. fetchSubscriptionComplete()\n *  5. fetchSubscription()\n *  6. fetchSubscriptionsComplete()\n *  7. fetchSubscriptions()\n *  8. editSubscription() -> TODO\n *  9. clearSubscription()\n */\n\nexport function newSubscription() {\n    return {\n        type: ActionTypes.NEW_SUBSCRIPTION,\n        payload: null,\n    };\n}\n\nexport function createSubscription(subscription) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving subscription...\", \"LOADING\"));\n            await client.newSubscription(subscription);\n            dispatch(fetchSubscriptions({}));\n            dispatch(\n                showNotification(\"Successfully created subscription\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create subscription.\");\n        }\n    };\n}\n\nexport function saveSubscription(subscription) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving subscription...\", \"LOADING\"));\n            const newSubscription = await client.saveSubscription(subscription);\n            dispatch(fetchSubscriptions());\n            dispatch(fetchSubscriptionComplete(newSubscription));\n            dispatch(\n                showNotification(\"Successfully saved subscription\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save subscription\");\n        }\n    };\n}\n\nexport function fetchSubscriptionComplete(subscription) {\n    return {\n        type: ActionTypes.FETCH_SUBSCRIPTION_COMPLETE,\n        payload: subscription,\n    };\n}\n\nexport function fetchSubscription(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading subscription...', 'LOADING'));\n            const subscription = await client.getSubscription(id);\n            dispatch(fetchSubscriptionComplete(subscription));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch subscription\");\n        }\n    };\n}\n\nexport function fetchSubscriptionsComplete(subscriptions) {\n    return {\n        type: ActionTypes.FETCH_SUBSCRIPTIONS_COMPLETE,\n        payload: subscriptions,\n    };\n}\n\nexport function fetchSubscriptions(params) {\n    return async (dispatch) => {\n        try {\n            const subscriptions = await client.getSubscriptions(params);\n            dispatch(fetchSubscriptionsComplete(subscriptions));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch subscriptions\");\n        }\n    };\n}\n\nexport function editSubscription(subscription) {\n    return {\n        type: ActionTypes.EDIT_SUBSCRIPTION,\n        payload: subscription,\n    };\n}\n\nexport function clearSubscription() {\n    return {\n        type: ActionTypes.CLEAR_SUBSCRIPTION,\n        payload: null,\n    };\n}\n\n/* INVOICE\n *  1. newInvoice()\n *  2. createInvoice() -> TODO\n *  3. saveInvoice()\n *  4. fetchInvoiceComplete()\n *  5. fetchInvoice()\n *  6. fetchInvoicesComplete()\n *  7. fetchInvoices()\n *  8. editInvoice()\n *  9. clearInvoice()\n */\n\nexport function newInvoice() {\n    return {\n        type: ActionTypes.NEW_INVOICE,\n        payload: null,\n    };\n}\n\nexport function saveInvoice(invoice) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving invoice...\", \"LOADING\"));\n            const newInvoice = await client.saveInvoice(invoice);\n            dispatch(fetchInvoices({})); // BUG: This action does not acknowledge the filters.\n            dispatch(fetchInvoiceComplete(newInvoice));\n            dispatch(showNotification(\"Successfully saved invoice\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save invoice\");\n        }\n    };\n}\n\nexport function fetchInvoiceComplete(invoice) {\n    return {\n        type: ActionTypes.FETCH_INVOICE_COMPLETE,\n        payload: invoice,\n    };\n}\n\nexport function fetchInvoice(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading invoice...', 'LOADING'));\n            const invoice = await client.getInvoice(id);\n            dispatch(fetchInvoiceComplete(invoice));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch invoice\");\n        }\n    };\n}\n\nexport function fetchInvoicesComplete(invoices) {\n    return {\n        type: ActionTypes.FETCH_INVOICES_COMPLETE,\n        payload: invoices,\n    };\n}\n\nexport function fetchInvoices(params) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading invoices...', 'LOADING'));\n            const invoices = await client.getInvoices(params);\n            dispatch(fetchInvoicesComplete(invoices));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch invoices\");\n        }\n    };\n}\n\nexport function editInvoice(invoice) {\n    return {\n        type: ActionTypes.EDIT_INVOICE,\n        payload: invoice,\n    };\n}\n\nexport function clearInvoice() {\n    return {\n        type: ActionTypes.CLEAR_INVOICE,\n        payload: null,\n    };\n}\n\n/* TRANSACTION\n *  1. newTransaction()\n *  2. createTransaction()\n *  3. saveTransaction()\n *  4. fetchTransactionComplete()\n *  5. fetchTransaction()\n *  6. fetchTransactionsComplete()\n *  7. fetchTransactions()\n *  8. editTransaction()\n *  9. clearTransaction()\n */\n\nexport function newTransaction() {\n    return {\n        type: ActionTypes.NEW_TRANSACTION,\n        payload: null,\n    };\n}\n\nexport function createTransaction(transaction) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving transaction...\", \"LOADING\"));\n            await client.newTransaction(transaction);\n            dispatch(fetchTransactions({}));\n            dispatch(\n                showNotification(\"Successfully created transaction\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create transaction\");\n        }\n    };\n}\n\nexport function saveTransaction(transaction) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving transaction...\", \"LOADING\"));\n            const newTransaction = await client.saveTransaction(transaction);\n            dispatch(fetchTransactions({})); // BUG: This action does not acknowledge the filters.\n            dispatch(fetchTransactionComplete(newTransaction));\n            dispatch(\n                showNotification(\"Successfully saved transaction\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save transaction\");\n        }\n    };\n}\n\nexport function fetchTransactionComplete(transaction) {\n    return {\n        type: ActionTypes.FETCH_TRANSACTION_COMPLETE,\n        payload: transaction,\n    };\n}\n\nexport function fetchTransaction(id) {\n    return async (dispatch) => {\n        const transaction = await client.getTransaction(id);\n        dispatch(fetchTransactionComplete(transaction));\n    };\n}\n\nexport function fetchTransactionsComplete(transactions) {\n    return {\n        type: ActionTypes.FETCH_TRANSACTIONS_COMPLETE,\n        payload: transactions,\n    };\n}\n\nexport function fetchTransactions(params) {\n    return async (dispatch) => {\n        try {\n            const transactions = await client.getTransactions(params);\n            dispatch(fetchTransactionsComplete(transactions));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch transactions\");\n        }\n    };\n}\n\nexport function editTransaction(transaction) {\n    return {\n        type: ActionTypes.EDIT_TRANSACTION,\n        payload: transaction,\n    };\n}\n\nexport function clearTransaction() {\n    return {\n        type: ActionTypes.CLEAR_TRANSACTION,\n        payload: null,\n    };\n}\n\n/* PLAN\n *  1. newPlan()\n *  2. createPlan()\n *  3. savePlan()\n *  4. fetchPlanComplete()\n *  5. fetchPlan()\n *  6. fetchPlansComplete()\n *  7. fetchPlans()\n *  8. editPlan()\n *  9. clearPlan()\n */\n\nexport function newPlan() {\n    return {\n        type: ActionTypes.NEW_PLAN,\n        payload: null,\n    };\n}\n\nexport function createPlan(plan) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving plan...\", \"LOADING\"));\n            await client.newPlan(plan);\n            dispatch(fetchPlans({}));\n            dispatch(showNotification(\"Successfully created plan\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create plan\");\n        }\n    };\n}\n\nexport function savePlan(plan) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving plan...\", \"LOADING\"));\n            const newPlan = await client.savePlan(plan);\n            dispatch(fetchPlans({}));\n            dispatch(fetchPlanComplete(newPlan));\n            dispatch(showNotification(\"Successfully saved plan\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save plan\");\n        }\n    };\n}\n\nexport function fetchPlanComplete(plan) {\n    return {\n        type: ActionTypes.FETCH_PLAN_COMPLETE,\n        payload: plan,\n    };\n}\n\nexport function fetchPlan(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading plan...', 'LOADING'));\n            const plan = await client.getPlan(id);\n            dispatch(fetchPlanComplete(plan));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save plan\");\n        }\n    };\n}\n\nexport function fetchPlansComplete(plans) {\n    return {\n        type: ActionTypes.FETCH_PLANS_COMPLETE,\n        payload: plans,\n    };\n}\n\nexport function fetchPlans(params) {\n    return async (dispatch) => {\n        try {\n            const plans = await client.getPlans(params);\n            dispatch(fetchPlansComplete(plans));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch plans\");\n        }\n    };\n}\n\nexport function editPlan(plan) {\n    return {\n        type: ActionTypes.EDIT_PLAN,\n        payload: plan,\n    };\n}\n\nexport function clearPlan() {\n    return {\n        type: ActionTypes.CLEAR_PLAN,\n        payload: null,\n    };\n}\n\n/* Analytics */\n\nexport function fetchAnalyticsComplete(analytics) {\n    return {\n        type: ActionTypes.FETCH_ANALYTICS_COMPLETE,\n        payload: analytics,\n    };\n}\n\nexport function fetchAnalytics(params) {\n    return async (dispatch) => {\n        try {\n            const response = await axios.get(\"/api/v1/analytics\", { params });\n            const analytics = response.data;\n            dispatch(fetchAnalyticsComplete(analytics));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch analytics data\");\n        }\n    };\n}\n\n/* MISC\n * 1. closeDialog\n * 2. showNotification\n * 3. closeNotification\n */\n\nexport function closeDialog() {\n    return {\n        type: ActionTypes.CLOSE_DIALOG,\n        payload: null,\n    };\n}\n\nexport function showNotification(message, category) {\n    return {\n        type: ActionTypes.SHOW_NOTIFICATION,\n        payload: {\n            message,\n            category,\n        },\n    };\n}\n\nexport function closeNotification() {\n    return {\n        type: ActionTypes.CLOSE_NOTIFICATION,\n        payload: null,\n    };\n}\n\nexport function fetchUserComplete(user) {\n    return {\n        type: ActionTypes.FETCH_USER_COMPLETE,\n        payload: user,\n    };\n}\n\nexport function fetchUserFailed() {\n    return {\n        type: ActionTypes.FETCH_USER_FAILED,\n        payload: null,\n    };\n}\n\nexport function fetchUser() {\n    return async (dispatch) => {\n        // let user = null;\n        // try {\n        //     const csClient = await crossStorage.connection;\n        //     user = JSON.parse(await csClient.get(\"user\"));\n        //     axios.defaults.headers.common = {\n        //         Authorization: `bearer ${user.accessToken}`,\n        //     };\n        // } catch (error) {\n        //     handleError(dispatch, error, \"Cannot find an active user session.\");\n        // }\n\n        // dispatch(user ? fetchUserComplete(user) : fetchUserFailed());\n        dispatch(\n            fetchUserComplete({\n                firstName: \"Samuel\",\n                lastName: \"Rowe\",\n            })\n        );\n    };\n}\n\nexport function logout() {\n    return async (dispatch) => {\n        try {\n            const csClient = await crossStorage.connection;\n            await csClient.del(\"user\");\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to logout!\");\n        }\n        /* Redirect the user to the login page. */\n        dispatch(fetchUserComplete(null));\n    };\n}\n\nexport function internalRedirect(path) {\n    return {\n        type: ActionTypes.INTERNAL_REDIRECT,\n        payload: path,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport { connect } from \"react-redux\";\nimport {\n    newAccount,\n    newSubscription,\n    newInvoice,\n    newTransaction,\n    newPlan,\n    newAPIKey,\n} from \"../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: 260,\n        minWidth: 400,\n        overflow: \"hidden\",\n    },\n    main: {\n        padding: 16,\n    },\n    groupTitle: {\n        fontSize: 12,\n        backgroundColor: theme.palette.primary.light,\n        padding: 8,\n        paddingLeft: 16,\n        marginTop: 0,\n        marginBottom: 0,\n        textTransform: \"uppercase\",\n    },\n    icon: {\n        display: \"block !important\",\n        marginLeft: \"auto !important\",\n        marginRight: \"auto !important\",\n    },\n    link: {\n        color: \"black\",\n        textDecoration: \"none\",\n    },\n    add: {\n        padding: 12,\n        \"&:hover\": {\n            background: \"#D3D3D3\",\n        },\n        width: 100,\n        borderRadius: 4,\n        cursor: \"pointer\",\n    },\n    linkTitle: {\n        marginTop: 4,\n        textAlign: \"center\",\n        fontSize: 12,\n    },\n}));\n\nconst groups = [\n    {\n        title: \"Record\",\n        links: [\n            {\n                id: \"account\",\n                title: \"Account\",\n                icon: \"account_circle\",\n                action: \"newAccount\",\n            },\n            {\n                id: \"subscription\",\n                title: \"Subscription\",\n                icon: \"autorenew\",\n                action: \"newSubscription\",\n            },\n            {\n                id: \"transaction\",\n                title: \"Transaction\",\n                icon: \"monetization_on\",\n                action: \"newTransaction\",\n            },\n        ],\n    },\n    {\n        title: \"Configuration\",\n        links: [\n            {\n                id: \"plan\",\n                title: \"Plan\",\n                icon: \"local_offer\",\n                action: \"newPlan\",\n            },\n            {\n                id: \"api-key\",\n                title: \"API Key\",\n                icon: \"code\",\n                action: \"newAPIKey\",\n            },\n        ],\n    },\n];\n\nfunction AddDialog(props) {\n    const classes = useStyles();\n    const { onClose, open, anchor } = props;\n    const makeHandler = (link) => () => {\n        onClose();\n        props[link.action]();\n    };\n\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchor}\n            onClose={onClose}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n        >\n            <div className={classes.root}>\n                {groups.map((group, index) => (\n                    <div>\n                        <h6 className={classes.groupTitle}>{group.title}</h6>\n                        <Grid\n                            className={classes.main}\n                            container={true}\n                            spacing={0}\n                        >\n                            {group.links.map((link, index) => (\n                                <Grid item={true}>\n                                    <div\n                                        className={classes.add}\n                                        onClick={makeHandler(link)}\n                                    >\n                                        <Icon className={classes.icon}>\n                                            {link.icon}\n                                        </Icon>\n                                        <Typography\n                                            className={classes.linkTitle}\n                                        >\n                                            {link.title}\n                                        </Typography>\n                                    </div>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                ))}\n            </div>\n        </Popover>\n    );\n}\n\nAddDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = {\n    newAccount,\n    newSubscription,\n    newInvoice,\n    newTransaction,\n    newPlan,\n    newAPIKey,\n};\n\nexport default connect(null, mapDispatchToProps)(AddDialog);\n","import React from \"react\";\nimport {\n    AppBar,\n    Button,\n    Toolbar,\n    makeStyles,\n    IconButton,\n    Typography,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LogoutIcon from \"@material-ui/icons/ExitToApp\";\n\nimport AddDialog from \"./AddDialog\";\nimport * as actions from \"../redux/actions\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    logoButton: {\n        height: 64,\n        width: 180,\n        borderRadius: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    toolbar: {},\n    hide: {\n        display: \"none\",\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    addButton: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    logoutButton: {\n        marginLeft: 8,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    icon: {\n        dispay: \"inline-block\",\n        marginRight: 4,\n    },\n}));\n\nfunction MainToolbar(props) {\n    const { toggleDrawer, drawerOpen, user, logout } = props;\n    const classes = useStyles();\n    const [addDialogAnchor, setAddDialogAnchor] = React.useState(null);\n\n    const handleOpenAddDialog = (event) =>\n        setAddDialogAnchor(event.currentTarget);\n    const handleCloseAddDialog = () => setAddDialogAnchor(null);\n\n    return (\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: drawerOpen,\n            })}\n        >\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    onClick={toggleDrawer}\n                    edge=\"start\"\n                    className={{ [classes.hide]: drawerOpen }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Button className={classes.logoButton}>\n                    {/*<img\n                        src=\"assets/images/hubble.png\"\n                        alt=\"Hubble logo\"\n                        height=\"40px\"\n                    />*/}\n                    <Typography>Cosmos</Typography>\n                </Button>\n                <div className={classes.buttons}>\n                    <Button\n                        className={classes.addButton}\n                        variant=\"text\"\n                        size=\"small\"\n                        onClick={handleOpenAddDialog}\n                    >\n                        <AddIcon className={classes.icon} />\n                        Quick Add\n                    </Button>\n\n                    <Button\n                        className={classes.logoutButton}\n                        variant=\"text\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={logout}\n                    >\n                        <LogoutIcon className={classes.icon} />\n                        Logout {user.firstName}\n                    </Button>\n                </div>\n\n                <AddDialog\n                    open={Boolean(addDialogAnchor)}\n                    onClose={handleCloseAddDialog}\n                    anchor={addDialogAnchor}\n                />\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchUser: actions.fetchUser,\n    logout: actions.logout,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(MainToolbar));\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ScreensIcon from \"@material-ui/icons/Pages\";\nimport PreferencesIcon from \"@material-ui/icons/Settings\";\nimport ActionsIcon from \"@material-ui/icons/DeviceHub\";\nimport ModelsIcon from \"@material-ui/icons/Category\";\nimport StylesIcon from \"@material-ui/icons/FormatPaint\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 60,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}));\n\nconst navigationGroups = [\n    {\n        id: \"primary\",\n        items: [\n            {\n                id: \"screens\",\n                title: \"Screens\",\n                icon: <ScreensIcon />,\n                link: \"/screens\",\n            },\n            {\n                id: \"actions\",\n                title: \"Actions\",\n                icon: <ActionsIcon />,\n                link: \"/actions\",\n            },\n            {\n                id: \"models\",\n                title: \"Models\",\n                icon: <ModelsIcon />,\n                link: \"/models\",\n            },\n            {\n                id: \"styles\",\n                title: \"Styles\",\n                icon: <StylesIcon />,\n                link: \"/styles\",\n            },\n            {\n                id: \"preferences\",\n                title: \"Preferences\",\n                icon: <PreferencesIcon />,\n                link: \"/preferences\",\n            },\n        ],\n    },\n];\n\nfunction MainDrawer(props) {\n    const makeLinkHandler = (url) => () => props.history.push(url);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const { open, handleCloseDrawer } = props;\n    return (\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={handleCloseDrawer}>\n                    {theme.direction === \"rtl\" ? (\n                        <ChevronRightIcon />\n                    ) : (\n                        <ChevronLeftIcon />\n                    )}\n                </IconButton>\n            </div>\n            <Divider />\n            {navigationGroups.map((group, index) => (\n                <React.Fragment key={group.id}>\n                    <List>\n                        {group.items.map((item, index) => (\n                            <ListItem\n                                button\n                                key={item.id}\n                                onClick={makeLinkHandler(item.link)}\n                            >\n                                <ListItemIcon>{item.icon}</ListItemIcon>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    {index + 1 < navigationGroups.length && <Divider />}\n                </React.Fragment>\n            ))}\n        </Drawer>\n    );\n}\n\nexport default withRouter(MainDrawer);\n","import React from \"react\";\n\nconst workspaceConfiguration = [\n    // API Key\n    {\n        path: \"/api-keys\",\n        component: React.lazy(() => import(\"./api-key/ViewAPIKeys\")),\n    },\n\n    // Webhooks\n    {\n        path: \"/webhooks\",\n        component: React.lazy(() => import(\"./webhook/ViewWebhooks\")),\n    },\n\n    // Screen\n    {\n        path: \"/screens/:identifier\",\n        component: React.lazy(() => import(\"./screen/ViewScreens\")),\n    },\n    {\n        path: \"/screens\",\n        component: React.lazy(() => import(\"./screen/ViewScreens\")),\n        exact: true,\n    },\n\n    // Action\n    {\n        path: \"/actions/:identifier\",\n        component: React.lazy(() => import(\"./action/ViewActions\")),\n    },\n    {\n        path: \"/actions\",\n        component: React.lazy(() => import(\"./action/ViewActions\")),\n        exact: true,\n    },\n\n    // Model\n    {\n        path: \"/models/:identifier\",\n        component: React.lazy(() => import(\"./model/ViewModels\")),\n    },\n    {\n        path: \"/models\",\n        component: React.lazy(() => import(\"./model/ViewModels\")),\n        exact: true,\n    },\n\n    // Analytics\n    {\n        path: \"/dashboard\",\n        component: React.lazy(() => import(\"./dashboard/Dashboard\")),\n        exact: true,\n    },\n\n    // Preferences\n    {\n        path: \"/preferences\",\n        component: React.lazy(() => import(\"./preferences/Preferences\")),\n        exact: true,\n    },\n];\n\nexport default workspaceConfiguration;\n","import React from \"react\";\n\nconst errorConfiguration = [\n    {\n        path: \"/error/404\",\n        component: React.lazy(() => import(\"./Error404\")),\n    },\n    {\n        path: \"/error/500\",\n        component: React.lazy(() => import(\"./Error500\")),\n    },\n];\n\nexport default errorConfiguration;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport workspaceConfiguration from \"./workspace/configuration\";\nimport errorConfiguration from \"./error/configuration\";\n\nconst routes = [\n    ...workspaceConfiguration,\n    ...errorConfiguration,\n    {\n        path: \"/\",\n        exact: true,\n        component: () => <Redirect to=\"/dashboard\" />,\n    },\n    {\n        component: () => <Redirect to=\"/error/404\" />,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport PropTypes from \"prop-types\";\n\nimport RecordForm from \"./RecordForm\";\nimport * as actions from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nconst rightDrawerWidth = 600;\nconst wideDrawerWidth = 1000;\nconst navigationWidth = 100;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: rightDrawerWidth,\n        display: \"flex\",\n        flexDirection: \"column\",\n\n        [theme.breakpoints.down(\"md\")]: {\n            width: 400,\n        },\n    },\n    rootWide: {\n        width: wideDrawerWidth,\n        [theme.breakpoints.down(\"md\")]: {\n            width: 500,\n        },\n    },\n    appBar: {},\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    title: {},\n    container: {\n        paddingLeft: 24,\n        paddingRight: 0,\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    navigation: {\n        width: \"navigationWidth\",\n        height: \"calc(100vh - 128px)\",\n        paddingTop: 24,\n        paddingBottom: 24,\n        marginRight: 24,\n    },\n    listItem: {\n        paddingLeft: 40,\n        paddingRight: 40,\n    },\n    content: {\n        paddingTop: 24,\n        paddingBottom: 24,\n        overflowY: \"auto\",\n        height: \"calc(100vh - 128px)\",\n        width: rightDrawerWidth,\n        scrollbarWidth: \"thin\",\n    },\n    contentWide: {\n        width: wideDrawerWidth - navigationWidth,\n    },\n    actions: {\n        width: rightDrawerWidth,\n        height: 64,\n        padding: 16,\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n\n        [theme.breakpoints.down(\"md\")]: {\n            width: 400,\n        },\n    },\n    actionsWide: {\n        width: wideDrawerWidth,\n\n        [theme.breakpoints.down(\"md\")]: {\n            width: 500,\n        },\n    },\n    spring: {\n        flexGrow: 1,\n    },\n}));\n\nfunction toRequest(groups, values) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            /*if (field.type === \"time_range\") {\n                result[field.identifier] = values[field.identifier].option;\n                if (values[field.identifier].option === \"custom\") {\n                    result[field.startIdentifier] = values[\n                        field.identifier\n                    ].startDate.getTime();\n                    result[field.endIdentifier] = values[\n                        field.identifier\n                    ].endDate.getTime();\n                }\n            }*/\n            switch (field.type) {\n                case \"account_lookup\":\n                case \"plan_lookup\": {\n                    result[field.identifier] = values[field.identifier].id;\n                    break;\n                }\n\n                case \"country\": {\n                    result[field.identifier] = values[field.identifier].code;\n                    break;\n                }\n\n                default: {\n                    result[field.identifier] = values[field.identifier];\n                    break;\n                }\n            }\n        });\n    });\n    return result;\n}\n\nfunction FormDrawer(props) {\n    const {\n        closeDialog,\n        title,\n        groups,\n        open,\n        onSave,\n        options,\n        updateLookupOptions,\n    } = props;\n    const classes = useStyles(props);\n    const [showMore, setShowMore] = React.useState(props.showMore);\n    const [values, setValues] = React.useState(props.values);\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const [saveDisabled, setSaveDisabled] = React.useState(true);\n\n    const handleShowMore = () => {\n        setShowMore(!showMore);\n    };\n    const handleSave = () => {\n        closeDialog();\n        const requestValues = toRequest(groups, values);\n        console.log(requestValues);\n        onSave(requestValues);\n    };\n    // TODO: Create a deep copy without serializing!\n    const handleValueChange = (field, value) => {\n        const newValues = JSON.parse(JSON.stringify(values));\n        newValues[field.identifier] = value;\n        setValues(newValues);\n    };\n\n    return (\n        <Drawer className={classes.drawer} anchor=\"right\" open={open}>\n            <div\n                className={\n                    showMore\n                        ? clsx(classes.root, classes.rootWide)\n                        : classes.root\n                }\n            >\n                <AppBar\n                    position=\"static\"\n                    elevation={1}\n                    className={classes.appBar}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Typography className={classes.title} variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <div className={classes.container}>\n                    {showMore && (\n                        <List component=\"nav\" className={classes.navigation}>\n                            {groups.map((group, groupIndex) => (\n                                <ListItem\n                                    className={classes.listItem}\n                                    key={group.identifier}\n                                    button={true}\n                                    selected={tabIndex === groupIndex}\n                                    onClick={() => setTabIndex(groupIndex)}\n                                >\n                                    <ListItemText\n                                        primary={group.label}\n                                        className={classes.tabText}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n\n                    <div\n                        className={\n                            showMore\n                                ? clsx(classes.content, classes.contentWide)\n                                : classes.content\n                        }\n                    >\n                        <RecordForm\n                            groups={groups}\n                            values={values}\n                            onValueChange={handleValueChange}\n                            tabIndex={tabIndex}\n                            showMore={showMore}\n                            options={options}\n                            updateLookupOptions={updateLookupOptions}\n                            onValidityChange={setSaveDisabled}\n                        />\n                    </div>\n                </div>\n\n                <Box\n                    boxShadow={4}\n                    className={\n                        showMore\n                            ? clsx(classes.actions, classes.actionsWide)\n                            : classes.actions\n                    }\n                >\n                    <Button\n                        disabled={saveDisabled}\n                        onClick={handleSave}\n                        color=\"primary\"\n                        className={classes.dialogAction}\n                    >\n                        Save\n                    </Button>\n                    <Button\n                        onClick={closeDialog}\n                        color=\"primary\"\n                        className={classes.dialogAction}\n                    >\n                        Cancel\n                    </Button>\n                    <div className={classes.spring}></div>\n                    <Button\n                        size=\"small\"\n                        variant=\"text\"\n                        onClick={handleShowMore}\n                        color=\"secondary\"\n                        className={classes.extraAction}\n                    >\n                        <Icon>\n                            {showMore\n                                ? \"keyboard_arrow_right\"\n                                : \"keyboard_arrow_left\"}\n                        </Icon>\n                        {showMore ? \"Show Less\" : \"Show More\"}\n                    </Button>\n                </Box>\n            </div>\n        </Drawer>\n    );\n}\n\nFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n};\n\nconst mapDispatchToProps = {\n    closeDialog: actions.closeDialog,\n};\n\nexport default connect(null, mapDispatchToProps)(FormDrawer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\n// text, large_text, number, date_picker, date_range_picker, switch, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, account\n\n// Only top level children can have quickAdd. Groups cannot have required, unique, multipleValues, mininmumValues, maximumValues.\n// Groups can have readOnly, hidden, tooltip\n// The same person can work in multiple organizations. But such cases are rare. Therefore, the system should be kept\n// simple and not accomodate such cases. given, there are other work arounds.\n\n// The user name should be unique across your organization.\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Name\",\n                identifier: \"name\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: true,\n                hidden: false,\n                tooltip: \"The name of the API key.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Read Permissions\",\n                identifier: \"readPermisions\",\n                type: \"multi_select\",\n                options: [\n                    {\n                        value: \"READ_ACCOUNTS\",\n                        title: \"Accounts\",\n                    },\n                    {\n                        value: \"READ_SUBSCRIPTIONS\",\n                        title: \"Subscriptions\",\n                    },\n                    {\n                        value: \"READ_INVOICES\",\n                        title: \"Invoices\",\n                    },\n                    {\n                        value: \"READ_TRANSACTIONS\",\n                        title: \"Transactions\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The resources that the API key provides read access to.\",\n                multipleValues: false,\n                defaultValue: [],\n            },\n            {\n                label: \"Read Write Permissions\",\n                identifier: \"readWritePermisions\",\n                type: \"multi_select\",\n                options: [\n                    {\n                        value: \"READ_WRITE_ACCOUNTS\",\n                        title: \"Accounts\",\n                    },\n                    {\n                        value: \"READ_WRITE_SUBSCRIPTIONS\",\n                        title: \"Subscriptions\",\n                    },\n                    {\n                        value: \"READ_WRITE_INVOICES\",\n                        title: \"Invoices\",\n                    },\n                    {\n                        value: \"READ_WRITE_TRANSACTIONS\",\n                        title: \"Transactions\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The resources that the API key provides read-write access to.\",\n                multipleValues: false,\n                defaultValue: [],\n            },\n        ],\n    },\n];\n\nfunction APIKeyFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.account || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nAPIKeyFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nAPIKeyFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n    onCancel: null,\n};\n\nexport default APIKeyFormDrawer;\n","import React, { Suspense } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\n// TODO: Update this import when Material UI moves this to production.\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { renderRoutes } from \"react-router-config\";\nimport MainToolbar from \"./MainToolbar\";\nimport MainDrawer from \"./MainDrawer\";\nimport { connect } from \"react-redux\";\n\nimport routes from \"../routes\";\n\nimport APIKeyFormDrawer from \"../workspace/api-key/APIKeyFormDrawer\";\nimport * as actions from \"../redux/actions\";\n\nconst miniDrawerWidth = 60;\nconst drawerWidth = 240;\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: miniDrawerWidth,\n        marginTop: 64,\n    },\n    contentShift: {\n        marginLeft: drawerWidth,\n        marginTop: 64,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    progress: {\n        maxWidth: 24,\n        maxHeight: 24,\n        color: \"white\",\n    },\n    drawer: {\n        width: 50,\n    },\n    suspense: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\n// TODO: The layouts should be configurable.\n// TODO: Show drawer instead of toolbar for smaller screens.\nfunction MainLayout(props) {\n    const {\n        openDialog,\n        notification,\n        closeNotification,\n        createAccount,\n        createSubscription,\n        createTransaction,\n        createPlan,\n    } = props;\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const classes = useStyles();\n\n    const toggleDrawer = () => {\n        setDrawerOpen(!drawerOpen);\n    };\n\n    const handleCloseNotification = (event, reason) => {\n        if (reason !== \"clickaway\") {\n            closeNotification();\n        }\n    };\n\n    const renderNotification = (notification) => {\n        if (notification) {\n            if (notification.category === \"LOADING\") {\n                return (\n                    <Snackbar\n                        open={true}\n                        autoHideDuration={6000}\n                        onClose={handleCloseNotification}\n                    >\n                        <SnackbarContent\n                            message={notification.message}\n                            action={\n                                <CircularProgress\n                                    className={classes.progress}\n                                />\n                            }\n                        />\n                    </Snackbar>\n                );\n            }\n\n            const severityMap = {\n                SUCCESS: \"success\",\n                ERROR: \"error\",\n            };\n            const severity = severityMap[notification.category]\n                ? severityMap[notification.category]\n                : \"SUCCESS\";\n\n            return (\n                <Snackbar\n                    open={true}\n                    autoHideDuration={6000}\n                    onClose={handleCloseNotification}\n                >\n                    <Alert\n                        severity={severity}\n                        onClose={handleCloseNotification}\n                    >\n                        {notification.message}\n                    </Alert>\n                </Snackbar>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <MainDrawer\n                    open={drawerOpen}\n                    handleCloseDrawer={toggleDrawer}\n                />\n                <MainToolbar\n                    drawerOpen={drawerOpen}\n                    toggleDrawer={toggleDrawer}\n                />\n\n                <main\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: drawerOpen,\n                    })}\n                >\n                    <Suspense\n                        fallback={\n                            <CircularProgress\n                                size=\"48px\"\n                                className={classes.suspense}\n                            />\n                        }\n                    >\n                        {renderRoutes(routes)}\n                    </Suspense>\n                    {props.children}\n                </main>\n\n                {/* <MainFooter /> */}\n            </div>\n\n            <APIKeyFormDrawer\n                title=\"New API Key\"\n                onSave={() => {}}\n                open={openDialog === \"NEW_API_KEY\"}\n            />\n\n            {renderNotification(notification)}\n        </React.Fragment>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        openDialog: state.openDialog,\n        notification: state.notification,\n    };\n}\n\nconst mapDispatchToProps = {\n    closeNotification: actions.closeNotification,\n    createAccount: actions.createAccount,\n    createPlan: actions.createPlan,\n    createSubscription: actions.createSubscription,\n    createTransaction: actions.createTransaction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import MainLayout from \"./MainLayout\";\n\nconst layouts = {\n    main: MainLayout,\n};\n\nexport default layouts;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport layouts from \"../layouts\";\n\nconst styles = (theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n    },\n});\n\nfunction PrimaryLayout(props) {\n    const { classes } = props;\n\n    // const Layout = layouts[settings.layout.name];\n    const Layout = layouts[\"main\"];\n    return <Layout className={classes.root} {...props} />;\n}\n\nexport default withStyles(styles)(withRouter(PrimaryLayout));\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        keys: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n        values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\n    },\n    direction: \"ltr\",\n    mixins: {\n        toolbar: {\n            minHeight: 48,\n            \"@media (min-width:0px) and (orientation: landscape)\": {\n                minHeight: 48,\n            },\n            \"@media (min-width:600px)\": { minHeight: 64 },\n        },\n    },\n    palette: {\n        // common: { black: \"#000\", white: \"#fff\" },\n        type: \"dark\",\n        primary: {\n            main: \"#303030\",\n            light: \"#303030\",\n            dark: \"#303030\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            main: \"#f0f0f0\",\n            light: \"#f0f0f0\",\n            dark: \"#f0f0f0\",\n            contrastText: \"#000\",\n        },\n        // error: {\n        //     light: \"#e57373\",\n        //     main: \"#f44336\",\n        //     dark: \"#d32f2f\",\n        //     contrastText: \"#fff\",\n        // },\n        // warning: {\n        //     light: \"#ffb74d\",\n        //     main: \"#ff9800\",\n        //     dark: \"#f57c00\",\n        //     contrastText: \"rgba(0, 0, 0, 0.87)\",\n        // },\n        // info: {\n        //     light: \"#64b5f6\",\n        //     main: \"#2196f3\",\n        //     dark: \"#1976d2\",\n        //     contrastText: \"#fff\",\n        // },\n        // success: {\n        //     light: \"#81c784\",\n        //     main: \"#4caf50\",\n        //     dark: \"#388e3c\",\n        //     contrastText: \"rgba(0, 0, 0, 0.87)\",\n        // },\n        // grey: {\n        //     50: \"#fafafa\",\n        //     100: \"#f5f5f5\",\n        //     200: \"#eeeeee\",\n        //     300: \"#e0e0e0\",\n        //     400: \"#bdbdbd\",\n        //     500: \"#9e9e9e\",\n        //     600: \"#757575\",\n        //     700: \"#616161\",\n        //     800: \"#424242\",\n        //     900: \"#212121\",\n        //     A100: \"#d5d5d5\",\n        //     A200: \"#aaaaaa\",\n        //     A400: \"#303030\",\n        //     A700: \"#616161\",\n        // },\n        // contrastThreshold: 3,\n        // tonalOffset: 0.2,\n        // text: {\n        //     primary: \"rgba(0, 0, 0, 0.87)\",\n        //     secondary: \"rgba(0, 0, 0, 0.54)\",\n        //     disabled: \"rgba(0, 0, 0, 0.38)\",\n        //     hint: \"rgba(0, 0, 0, 0.38)\",\n        // },\n        // divider: \"rgba(0, 0, 0, 0.12)\",\n        // background: {\n        //     paper: \"#fff\",\n        //     default: \"#fff\",\n        //     level2: \"#f5f5f5\",\n        //     level1: \"#fff\",\n        // },\n        // action: {\n        //     active: \"rgba(0, 0, 0, 0.54)\",\n        //     hover: \"rgba(0, 0, 0, 0.04)\",\n        //     hoverOpacity: 0.04,\n        //     selected: \"rgba(0, 0, 0, 0.08)\",\n        //     selectedOpacity: 0.08,\n        //     disabled: \"rgba(0, 0, 0, 0.26)\",\n        //     disabledBackground: \"rgba(0, 0, 0, 0.12)\",\n        //     disabledOpacity: 0.38,\n        //     focus: \"rgba(0, 0, 0, 0.12)\",\n        //     focusOpacity: 0.12,\n        //     activatedOpacity: 0.12,\n        // },\n    },\n    props: {},\n    shadows: [\n        \"none\",\n        \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\",\n        \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\",\n        \"0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)\",\n        \"0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)\",\n        \"0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)\",\n        \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\n        \"0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)\",\n        \"0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)\",\n        \"0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)\",\n        \"0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)\",\n        \"0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)\",\n        \"0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)\",\n    ],\n    typography: {\n        htmlFontSize: 16,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: 12,\n        fontWeightLight: 300,\n        fontWeightRegular: 400,\n        fontWeightMedium: 500,\n        fontWeightBold: 700,\n        h1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 300,\n            fontSize: \"6rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"-0.01562em\",\n        },\n        h2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 300,\n            fontSize: \"3.75rem\",\n            lineHeight: 1.2,\n            letterSpacing: \"-0.00833em\",\n        },\n        h3: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"3rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"0em\",\n        },\n        h4: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"2.125rem\",\n            lineHeight: 1.235,\n            letterSpacing: \"0.00735em\",\n        },\n        h5: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1.5rem\",\n            lineHeight: 1.334,\n            letterSpacing: \"0em\",\n        },\n        h6: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.6,\n            letterSpacing: \"0.0075em\",\n        },\n        subtitle1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.00938em\",\n        },\n        subtitle2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.57,\n            letterSpacing: \"0.00714em\",\n        },\n        body1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            letterSpacing: \"0.00938em\",\n        },\n        body2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.43,\n            letterSpacing: \"0.01071em\",\n        },\n        button: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.02857em\",\n            textTransform: \"none\",\n        },\n        caption: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 1.66,\n            letterSpacing: \"0.03333em\",\n        },\n        overline: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 2.66,\n            letterSpacing: \"0.08333em\",\n            textTransform: \"uppercase\",\n        },\n    },\n    shape: { borderRadius: 4 },\n    transitions: {\n        easing: {\n            easeInOut: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n            easeOut: \"cubic-bezier(0.0, 0, 0.2, 1)\",\n            easeIn: \"cubic-bezier(0.4, 0, 1, 1)\",\n            sharp: \"cubic-bezier(0.4, 0, 0.6, 1)\",\n        },\n        duration: {\n            shortest: 150,\n            shorter: 200,\n            short: 250,\n            standard: 300,\n            complex: 375,\n            enteringScreen: 225,\n            leavingScreen: 195,\n        },\n    },\n    zIndex: {\n        mobileStepper: 1000,\n        speedDial: 1050,\n        appBar: 1100,\n        drawer: 1200,\n        modal: 1300,\n        snackbar: 1400,\n        tooltip: 1500,\n    },\n    overrides: {\n        MuiInputLabel: {\n            root: {\n                fontSize: 14,\n            },\n        },\n        MuiTooltip: {\n            tooltip: {\n                fontSize: 11,\n            },\n        },\n    },\n    nprogress: { color: \"#000\" },\n});\n\nexport default theme;\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PrimaryLayout } from \"./common\";\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\n\nimport theme from \"./theme\";\nimport * as actions from \"./redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    checking: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    checkingProgress: {\n        marginTop: 16,\n    },\n    checkingText: {\n        marginTop: 16,\n        fontSize: 16,\n    },\n}));\n\nfunction App(props) {\n    const { user, isUserLoading, fetchUser } = props;\n    const classes = useStyles();\n\n    const renderCheckingAuthorization = () => {\n        if (isUserLoading) {\n            return (\n                <div className={classes.checking}>\n                    <CircularProgress\n                        size={50}\n                        thickness={4}\n                        className={classes.checkingProgress}\n                        variant=\"indeterminate\"\n                    />\n                    <Typography className={classes.checkingText}>\n                        Checking authorization...\n                    </Typography>\n                </div>\n            );\n        }\n\n        if (!isUserLoading && !user) {\n            window.location = `${process.env.REACT_APP_WEBSITE_URL}/login`;\n        }\n\n        return null;\n    };\n\n    useEffect(() => {\n        fetchUser();\n    }, [fetchUser]);\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <BrowserRouter>\n                <ThemeProvider theme={theme}>\n                    {user && <PrimaryLayout />}\n                    {renderCheckingAuthorization()}\n                </ThemeProvider>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        isUserLoading: state.isUserLoading,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchUser: actions.fetchUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { combineReducers } from \"redux\";\nimport * as ActionTypes from \"./actionTypes\";\n\nfunction dialogReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.NEW_API_KEY:\n        case ActionTypes.NEW_ACCOUNT:\n        case ActionTypes.NEW_SUBSCRIPTION:\n        case ActionTypes.NEW_INVOICE:\n        case ActionTypes.NEW_TRANSACTION:\n        case ActionTypes.NEW_PLAN:\n        case ActionTypes.EDIT_ACCOUNT:\n        case ActionTypes.EDIT_TRANSACTION:\n        case ActionTypes.EDIT_PLAN:\n        case ActionTypes.EDIT_INVOICE: {\n            return action.type;\n        }\n\n        case ActionTypes.CLOSE_DIALOG: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction notificationReducer(state = null, action) {\n    if (action.type === \"SHOW_NOTIFICATION\") {\n        return {\n            message: action.payload.message,\n            category: action.payload.category,\n        };\n    } else if (action.type === \"CLOSE_NOTIFICATION\") {\n        return null;\n    }\n    return state;\n}\n\nfunction analyticsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ANALYTICS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction accountsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ACCOUNTS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction accountReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ACCOUNT_COMPLETE:\n        case ActionTypes.EDIT_ACCOUNT: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_ACCOUNT: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction subscriptionsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_SUBSCRIPTIONS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction subscriptionReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_SUBSCRIPTION_COMPLETE: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_SUBSCRIPTION: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction invoicesReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_INVOICES_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction invoiceReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_INVOICE_COMPLETE:\n        case ActionTypes.EDIT_INVOICE: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_INVOICE: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction transactionsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_TRANSACTIONS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction transactionReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_TRANSACTION_COMPLETE:\n        case ActionTypes.EDIT_TRANSACTION: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_TRANSACTION: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction plansReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_PLANS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction planReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_PLAN_COMPLETE:\n        case ActionTypes.EDIT_PLAN: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_ACCOUNT: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction userReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_USER_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction isUserLoadingReducer(state = true, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_USER_COMPLETE:\n        case ActionTypes.FETCH_USER_FAILED: {\n            return false;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction internalRedirectReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.INTERNAL_REDIRECT: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nconst rootReducer = combineReducers({\n    openDialog: dialogReducer,\n    notification: notificationReducer,\n    analytics: analyticsReducer,\n    accounts: accountsReducer,\n    account: accountReducer,\n    subscriptions: subscriptionsReducer,\n    subscription: subscriptionReducer,\n    transactions: transactionsReducer,\n    transaction: transactionReducer,\n    plans: plansReducer,\n    plan: planReducer,\n    invoices: invoicesReducer,\n    invoice: invoiceReducer,\n    user: userReducer,\n    isUserLoading: isUserLoadingReducer,\n    internalRedirect: internalRedirectReducer,\n});\n\nexport default rootReducer;\n","import thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nlet store;\nif (process.env.NODE_ENV === \"development\") {\n    store = createStore(\n        rootReducer,\n        compose(applyMiddleware(thunk), composeWithDevTools())\n    );\n} else {\n    store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n}\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}