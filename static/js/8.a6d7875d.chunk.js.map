{"version":3,"sources":["workspace/common/NoRecords.js","workspace/common/WorkspaceToolbar.js","workspace/common/WorkspaceFilter.js","utils.js","workspace/common/WorkspaceTableHead.js","workspace/common/WorkspaceTable.js","workspace/api-key/ViewAPIKeys.js"],"names":["useStyles","makeStyles","theme","container","display","alignItems","justifyContent","flexDirection","height","backgroundColor","image","width","message","fontSize","fontWeight","color","palette","text","secondary","action","marginTop","NoRecords","props","classes","actionText","actionHandler","className","src","alt","variant","size","onClick","useToolbarStyles","appBar","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","textTransform","title","highlight","type","main","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","id","component","selectedTitle","selected","position","elevation","clsx","map","icon","Fragment","root","padding","marginBottom","clear","datePicker","toURLParams","fields","values","console","log","result","forEach","field","option","startIdentifier","startDate","getTime","endIdentifier","endDate","toFilterState","params","defaultValue","timestamp","parseInt","Date","WorkspaceFilter","onValueChange","onClear","makeChangeHandler","event","target","value","makeTimeRangeHandler","newValue","Object","assign","makeDateChangeHandler","which","date","utils","DateFnsUtils","item","lg","control","fullWidth","labelId","onChange","label","options","renderSelect","margin","startTitle","format","inputVariant","endTitle","renderTimeRange","toDateString","toLocaleDateString","undefined","year","month","day","WorkspaceTableHead","order","orderBy","onRequestSort","headers","TableHead","TableRow","header","TableCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","defaultDescendingComparator","a","b","paper","table","minWidth","border","clip","overflow","top","WorkspaceTable","onSelected","compact","renderCellValue","rows","totalRows","page","onChangePage","rowsPerPage","onChangeRowsPerPage","descendingComparator","React","useState","setOrder","setOrderBy","emptyRows","length","makeHandleCellClick","row","column","clickable","Paper","TableContainer","Table","onSelectAll","checked","newSelection","rowCount","TableBody","array","comparator","auxillary","index","sort","stableSort","getComparator","isItemSelected","indexOf","hover","role","tabIndex","rowIndex","columnIndex","renderCells","style","colSpan","TablePagination","rowsPerPageOptions","count","newPage","enabled","green","disabled","red","sample","records","name","permissions","requests","createdAt","status","filterFields","actions1","AddIcon","FilterIcon","ListIcon","DeleteIcon","actions2","CompactIcon","mapDispatchToProps","fetchAPIKeys","newAPIKey","connect","state","apiKeys","withRouter","history","location","queryString","parse","search","menuAnchor","setMenuAnchor","currentAPIKey","setCurrentAPIKey","setSelected","keys","openFilter","setOpenFilter","setCompact","setPage","limit","setRowsPerPage","defaultFilterValues","filterValues","setFilterValues","generateURL","flatValues","URLSearchParams","append","push","toString","Number","handleCloseMenu","useEffect","Grid","account","IconButton","apiKey","totalRecords","newRowsPerPage","filter","newValues","defaultValues","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem"],"mappings":"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","file":"static/js/8.a6d7875d.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        height: \"94vh\",\n        backgroundColor: \"#252525\",\n    },\n    image: {\n        width: \"auto\",\n        height: 400,\n    },\n    message: {\n        fontSize: 20,\n        fontWeight: 400,\n        color: theme.palette.text.secondary,\n    },\n    action: {\n        marginTop: 16,\n    },\n}));\n\nexport default function NoRecords(props) {\n    const classes = useStyles();\n    const { message, actionText, actionHandler, action, image } = props;\n\n    return (\n        <div className={classes.container}>\n            <img className={classes.image} src={image} alt=\"\" />\n            <Typography className={classes.message}>{message}</Typography>\n            {action && (\n                <Button\n                    className={classes.action}\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"secondary\"\n                    onClick={actionHandler}\n                >\n                    {actionText}\n                </Button>\n            )}\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 16,\n        marginLeft: 16,\n    },\n    title: {\n        fontSize: 16,\n        marginBottom: 24,\n    },\n    clear: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginTop: 16,\n    },\n    datePicker: {\n        marginTop: theme.spacing(3),\n        marginBottom: 0,\n    },\n}));\n\nexport function extractFilterState(fields) {\n    const result = {};\n    fields.forEach(\n        (field) =>\n            (result[field.identifier] = JSON.parse(\n                JSON.stringify(field.defaultValue)\n            ))\n    );\n    return result;\n}\n\nexport function toURLParams(fields, values) {\n    console.log(values);\n\n    const result = {};\n    fields.forEach((field) => {\n        if (field.type === \"time_range\") {\n            result[field.identifier] = values[field.identifier].option;\n            if (values[field.identifier].option === \"custom\") {\n                result[field.startIdentifier] = values[\n                    field.identifier\n                ].startDate.getTime();\n                result[field.endIdentifier] = values[\n                    field.identifier\n                ].endDate.getTime();\n            }\n        } else {\n            result[field.identifier] = values[field.identifier];\n        }\n    });\n    console.log(result);\n    return result;\n}\n\nexport function toFilterState(fields, params) {\n    const result = {};\n    fields.forEach((field) => {\n        if (field.type === \"time_range\") {\n            result[field.identifier] = {};\n\n            if (field.identifier in params) {\n                result[field.identifier].option = params[field.identifier];\n            } else {\n                result[field.identifier].option = field.defaultValue.option;\n            }\n\n            if (field.startIdentifier in params) {\n                const timestamp = parseInt(params[field.startIdentifier], 10);\n                result[field.identifier].startDate = new Date(timestamp);\n            } else {\n                result[field.identifier].startDate =\n                    field.defaultValue.startDate;\n            }\n\n            if (field.endIdentifier in params) {\n                const timestamp = parseInt(params[field.endIdentifier], 10);\n                result[field.identifier].endDate = new Date(timestamp);\n            } else {\n                result[field.identifier].endDate = field.defaultValue.endDate;\n            }\n        } else {\n            if (field.identifier in params) {\n                result[field.identifier] = params[field.identifier];\n            } else {\n                result[field.identifier] = field.defaultValue;\n            }\n        }\n    });\n    return result;\n}\n\nexport default function WorkspaceFilter(props) {\n    const { fields, values, onValueChange, onClear } = props;\n    const classes = useStyles();\n    const makeChangeHandler = (field) => (event) => {\n        onValueChange(field, event.target.value);\n    };\n    const makeTimeRangeHandler = (field) => (event) => {\n        const newValue = Object.assign({}, values[field]);\n        newValue.option = event.target.value;\n        onValueChange(field, newValue);\n    };\n    const makeDateChangeHandler = (field, which) => (date) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        // ISO format\n        newValue[which] = date; // format(date, \"yyyy/MM/dd\");\n        onValueChange(field.identifier, newValue);\n    };\n\n    const renderSelect = (field, value) => (\n        <FormControl\n            variant=\"outlined\"\n            className={classes.control}\n            fullWidth={true}\n        >\n            <InputLabel id={field.identifier}>{field.title}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={value}\n                onChange={makeChangeHandler(field.identifier)}\n                label={field.title}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    const renderTimeRange = (field, value) => (\n        <div>\n            <FormControl\n                variant=\"outlined\"\n                className={classes.control}\n                fullWidth={true}\n            >\n                <InputLabel id={field.identifier}>{field.title}</InputLabel>\n                <Select\n                    labelId={field.identifier}\n                    value={value.option}\n                    onChange={makeTimeRangeHandler(field.identifier)}\n                    label={field.title}\n                >\n                    {field.options.map((option) => (\n                        <MenuItem value={option.value}>{option.title}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            {value.option === \"custom\" && (\n                <React.Fragment>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id={field.identifier + \"Start\"}\n                        label={field.startTitle}\n                        format=\"MM/dd/yyyy\"\n                        inputVariant=\"outlined\"\n                        fullWidth={true}\n                        value={\n                            value.startDate === null\n                                ? new Date()\n                                : new Date(value.startDate)\n                        }\n                        onChange={makeDateChangeHandler(field, \"startDate\")}\n                        className={classes.datePicker}\n                    />\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id={field.identifier + \"End\"}\n                        label={field.endTitle}\n                        format=\"MM/dd/yyyy\"\n                        inputVariant=\"outlined\"\n                        fullWidth={true}\n                        value={\n                            value.endDate === null\n                                ? new Date()\n                                : new Date(value.endDate)\n                        }\n                        onChange={makeDateChangeHandler(field, \"endDate\")}\n                        className={classes.datePicker}\n                    />\n                </React.Fragment>\n            )}\n        </div>\n    );\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Paper className={classes.root}>\n                <Typography className={classes.title} variant=\"h6\">\n                    Filters\n                </Typography>\n                <Grid container={true} spacing={3}>\n                    {fields.map((field) => (\n                        <Grid item={true} lg={12}>\n                            {field.type === \"select\" &&\n                                renderSelect(field, values[field.identifier])}\n\n                            {field.type === \"time_range\" &&\n                                renderTimeRange(\n                                    field,\n                                    values[field.identifier]\n                                )}\n                        </Grid>\n                    ))}\n                </Grid>\n                <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    variant=\"text\"\n                    className={classes.clear}\n                    onClick={onClear}\n                >\n                    Clear\n                </Button>\n            </Paper>\n        </MuiPickersUtilsProvider>\n    );\n}\n","export function toDateString(date) {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    return date.toLocaleDateString(undefined, options);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nexport default function WorkspaceTableHead(props) {\n    const {\n        classes,\n        // onSelectAll,\n        order,\n        orderBy,\n        // selectionCount,\n        // rowCount,\n        onRequestSort,\n        headers,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {/*<TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            selectionCount > 0 && selectionCount < rowCount\n                        }\n                        checked={rowCount > 0 && selectionCount === rowCount}\n                        onChange={onSelectAll}\n                    />\n                </TableCell>*/}\n                {headers.map((header) => (\n                    <TableCell\n                        key={header.id}\n                        align={header.numeric ? \"right\" : \"left\"}\n                        padding={header.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === header.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === header.id}\n                            direction={orderBy === header.id ? order : \"asc\"}\n                            onClick={createSortHandler(header.id)}\n                        >\n                            {header.label}\n                            {orderBy === header.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nWorkspaceTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    selectionCount: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAll: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n\nimport WorkspaceTableHead from \"./WorkspaceTableHead\";\n\n/* The default comparator is recommended if the column IDs and the values are primitive.\n * Otherwise you should provide a custom descending comparator.\n */\nfunction defaultDescendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(descendingComparator, order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const auxillary = array.map((value, index) => [value, index]);\n    auxillary.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return auxillary.map((value) => value[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function WorkspaceTable(props) {\n    const classes = useStyles();\n    const {\n        onSelected,\n        headers,\n        selected,\n        compact,\n        onClick,\n        renderCellValue,\n        rows,\n        totalRows,\n        page,\n        onChangePage,\n        rowsPerPage,\n        onChangeRowsPerPage,\n        descendingComparator,\n    } = props;\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n\n    const handleRequestSort = (event, property) => {\n        const ascending = orderBy === property && order === \"asc\";\n        setOrder(ascending ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelection = rows.map((row) => row.id);\n            onSelected(newSelection);\n        } else {\n            onSelected([]);\n        }\n    };\n\n    // const makeHandleSelect = (name) => (event) => {\n    //     const selectedIndex = selected.indexOf(name);\n    //     let newSelected = [];\n\n    //     if (selectedIndex === -1) {\n    //         newSelected = newSelected.concat(selected, name);\n    //     } else if (selectedIndex === 0) {\n    //         newSelected = newSelected.concat(selected.slice(1));\n    //     } else if (selectedIndex === selected.length - 1) {\n    //         newSelected = newSelected.concat(selected.slice(0, -1));\n    //     } else if (selectedIndex > 0) {\n    //         newSelected = newSelected.concat(\n    //             selected.slice(0, selectedIndex),\n    //             selected.slice(selectedIndex + 1)\n    //         );\n    //     }\n\n    //     onSelected(newSelected);\n    // };\n\n    const emptyRows = rowsPerPage - rows.length;\n\n    const makeHandleCellClick = (row, column) => () => {\n        if (column.clickable) {\n            onClick(row);\n        }\n    };\n\n    const renderCells = (row, rowIndex) => (\n        <React.Fragment>\n            {headers.map((column, columnIndex) => (\n                <TableCell onClick={makeHandleCellClick(row, column)}>\n                    {renderCellValue(row, rowIndex, column, columnIndex)}\n                </TableCell>\n            ))}\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        size={compact ? \"small\" : \"medium\"}\n                    >\n                        <WorkspaceTableHead\n                            classes={classes}\n                            selectionCount={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAll={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                            headers={headers}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                rows,\n                                getComparator(\n                                    descendingComparator ||\n                                        defaultDescendingComparator,\n                                    order,\n                                    orderBy\n                                )\n                            ).map((row, index) => {\n                                const isItemSelected =\n                                    selected.indexOf(row.id) >= 0;\n\n                                return (\n                                    <TableRow\n                                        hover={true}\n                                        role=\"checkbox\"\n                                        tabIndex={-1}\n                                        key={row.identifier}\n                                        selected={isItemSelected}\n                                    >\n                                        {/*<TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={makeHandleSelect(\n                                                        row.identifier\n                                                    )}\n                                                />\n                                            </TableCell>*/}\n\n                                        {renderCells(row, index)}\n                                    </TableRow>\n                                );\n                            })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: (compact ? 33 : 53) * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[20, 40, 60, 80, 100]}\n                    component=\"div\"\n                    count={totalRows}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={(event, newPage) => onChangePage(newPage)}\n                    onChangeRowsPerPage={(event) =>\n                        onChangeRowsPerPage(parseInt(event.target.value, 10))\n                    }\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nimport WorkspaceTable from \"../common/WorkspaceTable\";\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport WorkspaceFilter from \"../common/WorkspaceFilter\";\nimport NoRecords from \"../common/NoRecords\";\nimport { toURLParams, toFilterState } from \"../common/WorkspaceFilter\";\nimport * as actions from \"../../redux/actions\";\nimport { toDateString } from \"../../utils\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/ViewList\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport CompactIcon from \"@material-ui/icons/ViewCompact\";\nimport EnabledIcon from \"@material-ui/icons/CheckCircle\";\nimport DisabledIcon from \"@material-ui/icons/Cancel\";\nimport MenuIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n    enabled: {\n        color: green[400],\n    },\n    disabled: {\n        color: red[400],\n    },\n    /*readChip: {\n        margin: 2,\n        background: yellow[800],\n        color: 'white'\n    },\n    readWriteChip: {\n        margin: 2,\n        background: green[400],\n        color: 'white'\n    },\n    chips: {\n        maxWidth: 400\n    }*/\n}));\n\nconst sample = {\n    records: [\n        {\n            name: \"primary\",\n            permissions: [\n                \"READ_ACCOUNTS\",\n                \"READ_SUBSCRIPTIONS\",\n                \"READ_WRITE_INVOICES\",\n                \"READ_WRITE_TRANSACIONS\",\n                \"READ_WRITE_PLANS\",\n            ],\n            requests: 193,\n            createdAt: new Date(),\n            status: \"ENABLED\",\n        },\n        {\n            name: \"secondary\",\n            permissions: [\"READ_ACCOUNTS\", \"READ_SUBSCRIPTIONS\"],\n            requests: 1999,\n            createdAt: new Date(),\n            status: \"DISABLED\",\n        },\n    ],\n};\n\n/*const permissionLabels = {\n    \"READ_ACCOUNTS\": \"Accounts\",\n    \"READ_WRITE_ACCOUNTS\": \"Accounts\",\n    \"READ_SUBSCRIPTIONS\": \"Subscriptions\",\n    \"READ_WRITE_SUBSCRIPTIONS\": \"Subscriptions\",\n    \"READ_INVOICES\": \"Invoices\",\n    \"READ_WRITE_INVOICES\": \"Invoices\",\n    \"READ_TRANSACTIONS\": \"Transactions\",\n    \"READ_WRITE_TRANSACIONS\": \"Transactions\",\n    \"READ_PLANS\": \"Plans\",\n    \"READ_WRITE_PLANS\": \"Plans\",\n};*/\n\nconst headers = [\n    {\n        id: \"name\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Name\",\n        clickable: true,\n    },\n    {\n        id: \"requests\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Requests\",\n        clickable: true,\n    },\n    {\n        id: \"created\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Created\",\n        clickable: true,\n    },\n    {\n        id: \"status\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Status\",\n        clickable: true,\n    },\n    {\n        id: \"actions\",\n        numeric: false,\n        disablePadding: true,\n        label: \"\",\n        clickable: false,\n    },\n];\n\nconst filterFields = [\n    {\n        identifier: \"date_range\",\n        type: \"time_range\",\n        title: \"Time Range\",\n        startTitle: \"Start Date\",\n        startIdentifier: \"start_date\",\n        endTitle: \"End Date\",\n        endIdentifier: \"end_date\",\n        options: [\n            {\n                value: \"all_time\",\n                title: \"All Time\",\n            },\n            {\n                value: \"last_3_months\",\n                title: \"Last 3 Months\",\n            },\n            {\n                value: \"last_6_months\",\n                title: \"Last 6 Months\",\n            },\n            {\n                value: \"last_9_months\",\n                title: \"Last 9 Months\",\n            },\n            {\n                value: \"last_12_months\",\n                title: \"Last 12 Months\",\n            },\n            {\n                value: \"last_15_months\",\n                title: \"Last 15 Months\",\n            },\n            {\n                value: \"last_18_months\",\n                title: \"Last 18 Months\",\n            },\n            {\n                value: \"custom\",\n                title: \"Custom\",\n            },\n        ],\n        defaultValue: {\n            option: \"all_time\",\n            startDate: new Date(),\n            endDate: new Date(),\n        },\n    },\n    {\n        identifier: \"api_key_status\",\n        type: \"select\",\n        title: \"API Key Status\",\n        options: [\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n            {\n                value: \"enabled\",\n                title: \"Enabled\",\n            },\n            {\n                value: \"disabled\",\n                title: \"Disabled\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n];\n\nconst actions1 = [\n    {\n        identifier: \"new\",\n        title: \"New\",\n        icon: AddIcon,\n        primary: true,\n    },\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"default\",\n        title: \"Default\",\n        icon: ListIcon,\n        primary: true,\n    },\n    {\n        identifier: \"delete\",\n        title: \"Delete\",\n        icon: DeleteIcon,\n        primary: false,\n    },\n];\n\nconst actions2 = [\n    {\n        identifier: \"new\",\n        title: \"New\",\n        icon: AddIcon,\n        primary: true,\n    },\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"compact\",\n        title: \"Compact\",\n        icon: CompactIcon,\n        primary: true,\n    },\n    {\n        identifier: \"delete\",\n        title: \"Delete\",\n        icon: DeleteIcon,\n        primary: false,\n    },\n];\n\nconst DEFAULT_ROWS_PER_PAGE = 20;\n\nfunction ViewAPIKeys(props) {\n    const { apiKeys, fetchAPIKeys, newAPIKey, history, location } = props;\n    const params = queryString.parse(location.search);\n    const classes = useStyles();\n    const [menuAnchor, setMenuAnchor] = useState(null);\n    const [currentAPIKey, setCurrentAPIKey] = useState(null);\n    const [selected, setSelected] = useState([]);\n    const [openFilter, setOpenFilter] = useState(\n        Object.keys(params).length > 0\n    );\n    const [compact, setCompact] = useState(false);\n    const [page, setPage] = useState(parseInt(params.page, 10) || 0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(\n        params.limit || DEFAULT_ROWS_PER_PAGE\n    );\n    // TODO: Should we cache this?\n    const defaultFilterValues = toFilterState(filterFields, params);\n    const [filterValues, setFilterValues] = useState(defaultFilterValues);\n\n    const generateURL = (values, page, rowsPerPage) => {\n        const flatValues = toURLParams(filterFields, values);\n        const params = new URLSearchParams(flatValues);\n        params.append(\"page\", page);\n        params.append(\"limit\", rowsPerPage);\n\n        history.push(\"/api-keys?\" + params.toString());\n    };\n\n    // Both the parameters must appear together. Otherwise, we automatically reset them both.\n    if (!(\"page\" in params) || !(\"limit\" in params)) {\n        generateURL(filterValues, page, rowsPerPage);\n    }\n\n    if (\"start_date\" in params) {\n        params[\"start_date\"] = new Date(Number(params[\"start_date\"]));\n    }\n    if (\"end_date\" in params) {\n        params[\"end_date\"] = new Date(Number(params[\"end_date\"]));\n    }\n\n    const handleAction = (type) => {\n        if (type === \"new\") {\n            newAPIKey();\n        } else if (type === \"filter\") {\n            setOpenFilter(!openFilter);\n        } else if (type === \"compact\" || type === \"default\") {\n            setCompact(!compact);\n        }\n    };\n\n    const onClick = (account) => {\n        history.push(\"/apiKeys/\" + account.id);\n    };\n\n    // TODO: Create a deep copy without serializing!\n    const onFilterValueChange = (field, value) => {\n        const newValues = Object.assign({}, filterValues);\n        newValues[field] = value;\n        setFilterValues(newValues);\n\n        generateURL(newValues, page, rowsPerPage);\n    };\n\n    const onFilterClear = () => {\n        const defaultValues = toFilterState(filterFields, {});\n        setFilterValues(defaultValues);\n\n        generateURL(defaultValues, page, rowsPerPage);\n    };\n\n    const makeHandleOpenMenu = (apiKey) => (event) => {\n        setMenuAnchor(event.target);\n        setCurrentAPIKey(apiKey);\n    };\n\n    const handleCloseMenu = () => {\n        setMenuAnchor(null);\n        setCurrentAPIKey(null);\n    };\n\n    const renderCellValue = (row, rowIndex, column, columnIndex) => {\n        switch (column.id) {\n            case \"name\": {\n                return row.name;\n            }\n\n            /*\n            case \"permissions\": {\n                return (<div className={classes.chips}>\n                    {row.permissions.map(permission => <Chip className={permission.startsWith(\"READ_WRITE\")? classes.readWriteChip : classes.readChip} label={permissionLabels[permission]} />)}\n                </div>);\n            }*/\n\n            case \"status\": {\n                return row.status === \"ENABLED\" ? (\n                    <EnabledIcon className={classes.enabled} />\n                ) : (\n                    <DisabledIcon className={classes.disabled} />\n                );\n            }\n\n            case \"requests\": {\n                return row.requests;\n            }\n\n            case \"created\": {\n                return toDateString(row.createdAt);\n            }\n\n            case \"actions\": {\n                return (\n                    <IconButton onClick={makeHandleOpenMenu(row)}>\n                        <MenuIcon />\n                    </IconButton>\n                );\n            }\n\n            default: {\n                return \"Unknown Column\";\n            }\n        }\n    };\n\n    const onChangePage = (newPage) => {\n        setPage(newPage);\n        generateURL(filterValues, newPage, rowsPerPage);\n    };\n\n    const onChangeRowsPerPage = (newRowsPerPage) => {\n        setPage(0);\n        setRowsPerPage(newRowsPerPage);\n        generateURL(filterValues, 0, newRowsPerPage);\n    };\n\n    useEffect(() => {\n        const flatValues = toURLParams(filterFields, filterValues);\n        flatValues.page = page;\n        flatValues.limit = rowsPerPage;\n        fetchAPIKeys(flatValues);\n    }, [fetchAPIKeys, filterValues, page, rowsPerPage]);\n\n    return (\n        <div>\n            <WorkspaceToolbar\n                title=\"API Keys\"\n                selectionCount={selected.length}\n                actions={compact ? actions1 : actions2}\n                onAction={handleAction}\n            />\n            {apiKeys && apiKeys.records.length > 0 && (\n                <Grid container={true} className={classes.container}>\n                    <Grid item={true} lg={openFilter ? 10 : 12}>\n                        <WorkspaceTable\n                            headers={headers}\n                            onSelected={setSelected}\n                            selected={selected}\n                            compact={compact}\n                            onClick={onClick}\n                            renderCellValue={renderCellValue}\n                            rows={apiKeys.records}\n                            totalRows={apiKeys.totalRecords}\n                            page={page}\n                            rowsPerPage={rowsPerPage}\n                            onChangePage={onChangePage}\n                            onChangeRowsPerPage={onChangeRowsPerPage}\n                        />\n                    </Grid>\n                    {openFilter && (\n                        <Grid item={true} lg={2} className={classes.filter}>\n                            <WorkspaceFilter\n                                fields={filterFields}\n                                values={filterValues}\n                                onValueChange={onFilterValueChange}\n                                onClear={onFilterClear}\n                            />\n                        </Grid>\n                    )}\n                </Grid>\n            )}\n\n            {(!apiKeys || apiKeys.records.length === 0) && (\n                <NoRecords\n                    message=\"You have not created any API keys yet.\"\n                    action={true}\n                    actionText=\"Create API Key\"\n                    actionHandler={newAPIKey}\n                    image=\"assets/images/empty-api-keys.svg\"\n                />\n            )}\n\n            {menuAnchor && (\n                <Menu\n                    anchorEl={menuAnchor}\n                    keepMounted={true}\n                    open={Boolean(menuAnchor)}\n                    onClose={handleCloseMenu}\n                >\n                    <MenuItem onClick={handleCloseMenu}>Edit</MenuItem>\n                    <MenuItem onClick={handleCloseMenu}>Delete</MenuItem>\n                    <MenuItem onClick={handleCloseMenu}>\n                        {currentAPIKey.status === \"ENABLED\"\n                            ? \"Disable\"\n                            : \"Enable\"}\n                    </MenuItem>\n                </Menu>\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        apiKeys: sample,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchAPIKeys: () => ({ type: \"todo\" }),\n    newAPIKey: actions.newAPIKey,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewAPIKeys));\n"],"sourceRoot":""}