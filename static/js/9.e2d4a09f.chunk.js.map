{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","workspace/preferences/PreferenceForms.js","workspace/preferences/Preferences.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Card","React","ref","_props$raised","raised","other","Paper","_extends","root","withStyles","overflow","name","CardContent","_props$component","Component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","display","alignItems","useStyles","margin","borderRadius","width","details","flexDirection","PreferenceForms","groups","useState","extractValues","values","setValues","saveDisabled","setSaveDisabled","RecordForm","onValueChange","field","value","newValues","JSON","parse","stringify","tabIndex","showMore","onValidityChange","Button","disabled","TabPanel","children","index","role","hidden","Box","p","card","justifyContent","tabs","paddingTop","tab","profileForm","label","required","readOnly","quickAdd","unique","tooltip","multipleValues","defaultValue","validations","validationErrors","isAlphanumeric","minLength","maxLength","isEmail","companyForm","options","securityForm","Preferences","setValue","Grid","container","item","xs","md","Tabs","orientation","onChange","event","newValue","Tab"],"mappings":"8MASMA,EAAmBC,aAAW,SAACC,GAAD,MAAY,CAC5CC,OAAQ,CACJC,MAAOF,EAAMG,QAAQC,QACrBC,WAAY,SAEhBC,QAAS,CACLC,YAAaP,EAAMQ,QAAQ,GAC3BC,aAAcT,EAAMQ,QAAQ,IAEhCE,QAAS,CACLC,WAAY,QAEhBC,OAAQ,CACJC,cAAe,OACfN,YAAa,GACbE,aAAc,IAElBK,MAAO,CACHZ,MAAOF,EAAMG,QAAQY,KAAKX,QAC1BY,WAAY,KAEhBC,UAC2B,UAAvBjB,EAAMG,QAAQe,KACR,CACIhB,MAAOF,EAAMG,QAAQgB,UAAUC,KAC/BC,gBAAiBC,YAAQtB,EAAMG,QAAQgB,UAAUI,MAAO,MAE5D,CACIrB,MAAOF,EAAMG,QAAQY,KAAKX,QAC1BiB,gBAAiBrB,EAAMG,QAAQgB,UAAUK,MAEvDC,WAAY,CACRC,YAAa,OAwGNC,IApGf,SAA0BC,GACtB,IAAMC,EAAU/B,IACRgB,EAA6Cc,EAA7Cd,MAAOgB,EAAsCF,EAAtCE,eAAgBC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SAElCC,EAAoB,SAACC,GAAD,OAAgB,kBAAMF,EAASE,KAEnDC,EACF,kBAAC,IAAD,CACIC,UAAWP,EAAQf,MACnBuB,QAAQ,KACRC,GAAG,aACHC,UAAU,OAETzB,GAIH0B,EACF,kBAAC,IAAD,CACIJ,UAAWP,EAAQf,MACnBuB,QAAQ,YACRE,UAAU,OAETT,EALL,aASEW,EAAWX,EAAiB,EAoDlC,OACI,kBAAC,IAAD,CAAQY,SAAS,SAASC,UAAW,EAAGP,UAAWP,EAAQ5B,QACvD,kBAAC,IAAD,CACImC,UAAWQ,YAAKf,EAAQvB,QAAT,eACVuB,EAAQZ,UAAYwB,KAGxBA,EAAWD,EAAgBL,EAE5B,yBAAKC,UAAWP,EAAQnB,SACnB+B,EA3DTV,EACOA,EAAQc,KACX,SAACjC,GAAD,OACKA,EAAOR,SACJ,kBAAC,IAAD,CACIgC,UAAWP,EAAQjB,OACnByB,QAAQ,OACRS,KAAK,QACL5C,MAAM,UACN6C,QAASd,EAAkBrB,EAAOsB,aAElC,kBAACtB,EAAOoC,KAAR,CAAaZ,UAAWP,EAAQJ,aAC/Bb,EAAOE,UAKrB,KAIHiB,EAEI,kBAAC,IAAMkB,SAAP,KACKlB,EAAQc,KACL,SAACjC,GAAD,OACIA,EAAOR,SACH,kBAAC,IAAD,CACIgC,UAAWP,EAAQjB,OACnByB,QAAQ,OACRS,KAAK,QACL5C,MAAM,UACN6C,QAASd,EACLrB,EAAOsB,aAGX,kBAACtB,EAAOoC,KAAR,CACIZ,UAAWP,EAAQJ,aAEtBb,EAAOE,WAO7B,U,iCCxHA,SAASoC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,gPEJLW,EAAoBC,cAAiB,SAAcvC,EAAOwC,GAC5D,IAAIvC,EAAUD,EAAMC,QAChBO,EAAYR,EAAMQ,UAClBiC,EAAgBzC,EAAM0C,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQrB,YAAyBtB,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBuC,gBAAoBK,IAAOC,YAAS,CACtDrC,UAAWQ,YAAKf,EAAQ6C,KAAMtC,GAC9BO,UAAW2B,EAAS,EAAI,EACxBF,IAAKA,GACJG,OA6BUI,cA9CK,CAElBD,KAAM,CACJE,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZT,GCxCCY,EAA2BX,cAAiB,SAAqBvC,EAAOwC,GAC1E,IAAIvC,EAAUD,EAAMC,QAChBO,EAAYR,EAAMQ,UAClB2C,EAAmBnD,EAAMW,UACzByC,OAAiC,IAArBD,EAA8B,MAAQA,EAClDR,EAAQrB,YAAyBtB,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBuC,gBAAoBa,EAAWP,YAAS,CAC1DrC,UAAWQ,YAAKf,EAAQ6C,KAAMtC,GAC9BgC,IAAKA,GACJG,OAgCUI,cAnDK,CAElBD,KAAM,CACJO,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCL,KAAM,kBADOF,CAEZG,G,SCtCCK,EAA2BhB,cAAiB,SAAqBvC,EAAOwC,GAC1E,IAAIgB,EAAwBxD,EAAMyD,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DvD,EAAUD,EAAMC,QAChBO,EAAYR,EAAMQ,UAClBmC,EAAQrB,YAAyBtB,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAoBuC,gBAAoB,MAAOM,YAAS,CACtDrC,UAAWQ,YAAKf,EAAQ6C,KAAMtC,GAAYiD,GAAkBxD,EAAQrB,SACpE4D,IAAKA,GACJG,OA6BUI,cAtDK,CAElBD,KAAM,CACJY,QAAS,OACTC,WAAY,SACZN,QAAS,GAIXzE,QAAS,CACP,yBAA0B,CACxBG,WAAY,KA2CgB,CAChCkE,KAAM,kBADOF,CAEZQ,G,kBCtDGK,EAAYzF,aAAW,SAACC,GAAD,MAAY,CACrC0E,KAAM,CACFe,OAAQ,EACRC,aAAc,EACdC,MAAO,OAEXC,QAAS,CACLX,QAAS,IAEblD,QAAS,CACL4D,MAAO,OACPL,QAAS,OACTO,cAAe,eAEnBjF,OAAQ,CACJ+E,MAAO,KAEXlE,WAAY,CACRC,YAAa,EACb4D,QAAS,oBAIF,SAASQ,EAAgBlE,GACpC,IAAMC,EAAU2D,IACRO,EAAWnE,EAAXmE,OAFmC,EAGf5B,IAAM6B,SAASC,YAAcF,IAHd,mBAGpCG,EAHoC,KAG5BC,EAH4B,OAIHhC,IAAM6B,UAAS,GAJZ,mBAIpCI,EAJoC,KAItBC,EAJsB,KAe3C,OACI,6BACI,kBAAC,EAAD,CAAMjE,UAAWP,EAAQ6C,KAAMrC,QAAQ,YACnC,kBAAC,EAAD,CAAaD,UAAWP,EAAQ+D,SAC5B,kBAACU,EAAA,EAAD,CACIP,OAAQA,EACRG,OAAQA,EACRK,cAhBM,SAACC,EAAOC,GAC9B,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,UAAUX,IAC5CQ,EAAUF,EAAMtE,YAAcuE,EAE9BN,EAAUO,IAaMI,SAXH,EAYGC,UAXH,EAYGC,iBAAkBX,KAG1B,kBAAC,EAAD,CAAajE,UAAWP,EAAQE,SAC5B,kBAACkF,EAAA,EAAD,CACIC,SAAUd,EACVtD,KAAK,QACLT,QAAQ,OACRnC,MAAM,UACNkC,UAAWP,EAAQjB,QALvB,WChDpB,SAASuG,EAASvF,GAAQ,IACdwF,EAAqCxF,EAArCwF,SAAUX,EAA2B7E,EAA3B6E,MAAOY,EAAoBzF,EAApByF,MAAU9C,EADd,YACwB3C,EADxB,8BAGrB,OACI,uCACI0F,KAAK,WACLC,OAAQd,IAAUY,EAClB/E,GAAE,4BAAuB+E,IACrB9C,GAEHkC,IAAUY,GAAS,kBAACG,EAAA,EAAD,CAAKC,EAAG,GAAR,IAAaL,IAW7C,IAAM5B,EAAYzF,aAAW,SAACC,GAAD,MAAY,CACrC0H,KAAM,CACFjC,OAAQ,GACRC,aAAc,EACdiC,eAAgB,gBAEpB/B,QAAS,CACLC,cAAe,SACfZ,QAAS,GAEb2C,KAAM,CACFnC,OAAQ,EACRoC,WAAY,IAEhBC,IAAK,CACDrC,OAAQ,OAIVsC,EAAc,CAChB,CACIC,MAAO,QACPZ,SAAU,CACN,CACIY,MAAO,aACP9F,WAAY,YACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,8BACTC,gBAAgB,EAChBC,aAAc,GACdC,YAAa,0CACbC,iBAAkB,CACdC,eACI,sDACJC,UAAW,+CACXC,UAAW,iDAGnB,CACIZ,MAAO,YACP9F,WAAY,WACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,6BACTC,gBAAgB,EAChBC,aAAc,GACdC,YAAa,0CACbC,iBAAkB,CACdC,eACI,qDACJC,UAAW,8CACXC,UAAW,gDAGnB,CACIZ,MAAO,gBACP9F,WAAY,eACZhB,KAAM,gBACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,oCACTC,gBAAgB,EAChBC,aAAc,GACdC,YAAa,UACbC,iBAAkB,CACdI,QAAS,wCAGjB,CACIb,MAAO,eACP9F,WAAY,cACZhB,KAAM,eACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,mCACTC,gBAAgB,EAChBC,aAAc,OAMxBO,EAAc,CAChB,CACId,MAAO,QACPZ,SAAU,CACN,CACIY,MAAO,OACP9F,WAAY,OACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,2BACTC,gBAAgB,EAChBC,aAAc,GACdC,YAAa,2CACbC,iBAAkB,CACdC,eACI,wDACJC,UACI,mDACJC,UACI,oDAGZ,CACIZ,MAAO,gBACP9F,WAAY,eACZhB,KAAM,gBACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,oCACTC,gBAAgB,EAChBC,aAAc,GACdC,YAAa,UACbC,iBAAkB,CACdI,QAAS,wCAGjB,CACIb,MAAO,eACP9F,WAAY,cACZhB,KAAM,eACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,mCACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,iBACP9F,WAAY,eACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,6BACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,iBACP9F,WAAY,eACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,6BACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,OACP9F,WAAY,OACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,YACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,QACP9F,WAAY,QACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,wCACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,UACP9F,WAAY,UACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,0CACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,WACP9F,WAAY,UACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QACI,2DACJC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,UACP9F,WAAY,UACZhB,KAAM,OACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,8BACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,WACP9F,WAAY,WACZhB,KAAM,SACN6H,QAAS,CACL,CACItC,MAAO,mBACP3F,MAAO,oBAEX,CACI2F,MAAO,oBACP3F,MAAO,qBAEX,CACI2F,MAAO,oBACP3F,MAAO,qBAEX,CACI2F,MAAO,SACP3F,MAAO,UAEX,CACI2F,MAAO,YACP3F,MAAO,aAEX,CACI2F,MAAO,gBACP3F,MAAO,iBAEX,CACI2F,MAAO,gCACP3F,MAAO,mCAEX,CACI2F,MAAO,aACP3F,MAAO,cAEX,CACI2F,MAAO,aACP3F,MAAO,cAEX,CACI2F,MAAO,YACP3F,MAAO,aAEX,CACI2F,MAAO,qBACP3F,MAAO,uBAGfmH,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,yCACTC,gBAAgB,EAChBC,aAAc,SAMxBS,EAAe,CACjB,CACIhB,MAAO,QACPZ,SAAU,CACN,CACIY,MAAO,eACP9F,WAAY,cACZhB,KAAM,WACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,gCACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,eACP9F,WAAY,cACZhB,KAAM,WACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,gCACTC,gBAAgB,EAChBC,aAAc,IAElB,CACIP,MAAO,mBACP9F,WAAY,kBACZhB,KAAM,WACN+G,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRb,QAAQ,EACRc,QAAS,gCACTC,gBAAgB,EAChBC,aAAc,OAMf,SAASU,IACpB,IAAMpH,EAAU2D,IADkB,EAELrB,IAAM6B,SAAS,GAFV,mBAE3Bc,EAF2B,KAEjBoC,EAFiB,KAQlC,OACI,6BACI,kBAACvH,EAAA,EAAD,CAAkBb,MAAM,gBACxB,kBAACqI,EAAA,EAAD,CAAMC,WAAW,GACb,kBAACD,EAAA,EAAD,CAAME,MAAM,EAAMC,GAAI,GAAIC,GAAI,GAC1B,kBAAC,EAAD,CAAMlH,QAAQ,WAAWD,UAAWP,EAAQ6F,MACxC,kBAAC,EAAD,CAAatF,UAAWP,EAAQ+D,SAC5B,kBAAC4D,EAAA,EAAD,CACIC,YAAY,WACZpH,QAAQ,YACRoE,MAAOK,EACP4C,SAfP,SAACC,EAAOC,GACzBV,EAASU,IAeexH,UAAWP,EAAQ+F,MAEnB,kBAACiC,EAAA,EAAD,CAAK7B,MAAM,YACX,kBAAC6B,EAAA,EAAD,CAAK7B,MAAM,aACX,kBAAC6B,EAAA,EAAD,CAAK7B,MAAM,gBAK3B,kBAACmB,EAAA,EAAD,CAAME,MAAM,EAAMC,GAAI,GAAIC,GAAI,IAC1B,kBAACpC,EAAD,CAAUV,MAAOK,EAAUO,MAAO,GAC9B,kBAACvB,EAAD,CAAiBC,OAAQgC,KAE7B,kBAACZ,EAAD,CAAUV,MAAOK,EAAUO,MAAO,GAC9B,kBAACvB,EAAD,CAAiBC,OAAQiD,KAE7B,kBAAC7B,EAAD,CAAUV,MAAOK,EAAUO,MAAO,GAC9B,kBAACvB,EAAD,CAAiBC,OAAQ+C","file":"static/js/9.e2d4a09f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport RecordForm, { extractValues } from \"../common/RecordForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: 0,\n        borderRadius: 0,\n        width: \"50%\",\n    },\n    details: {\n        padding: 24,\n    },\n    actions: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n    },\n    action: {\n        width: 100,\n    },\n    actionIcon: {\n        marginRight: 4,\n        display: \"inline-block\",\n    },\n}));\n\nexport default function PreferenceForms(props) {\n    const classes = useStyles();\n    const { groups } = props;\n    const [values, setValues] = React.useState(extractValues(groups));\n    const [saveDisabled, setSaveDisabled] = React.useState(true);\n\n    const handleValueChange = (field, value) => {\n        const newValues = JSON.parse(JSON.stringify(values));\n        newValues[field.identifier] = value;\n\n        setValues(newValues);\n    };\n    const tabIndex = 0;\n    const showMore = true;\n\n    return (\n        <div>\n            <Card className={classes.root} variant=\"outlined\">\n                <CardContent className={classes.details}>\n                    <RecordForm\n                        groups={groups}\n                        values={values}\n                        onValueChange={handleValueChange}\n                        tabIndex={tabIndex}\n                        showMore={showMore}\n                        onValidityChange={setSaveDisabled}\n                    />\n                </CardContent>\n                <CardActions className={classes.actions}>\n                    <Button\n                        disabled={saveDisabled}\n                        size=\"small\"\n                        variant=\"text\"\n                        color=\"primary\"\n                        className={classes.action}\n                    >\n                        Save\n                    </Button>\n                </CardActions>\n            </Card>\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport WorkspaceToolbar from \"../../workspace/common/WorkspaceToolbar\";\nimport PreferenceForms from \"./PreferenceForms\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}> {children}</Box>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: 24,\n        borderRadius: 0,\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        flexDirection: \"column\",\n        padding: 0,\n    },\n    tabs: {\n        margin: 0,\n        paddingTop: 24,\n    },\n    tab: {\n        margin: 0,\n    },\n}));\n\nconst profileForm = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"First Name\",\n                identifier: \"firstName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first name of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:3,maxLength:30\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The first name can contain only letters and digits.\",\n                    minLength: \"The first name must be 3-30 characters long.\",\n                    maxLength: \"The first name must be 3-30 characters long.\",\n                },\n            },\n            {\n                label: \"Last Name\",\n                identifier: \"lastName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The last name of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:3,maxLength:30\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The last name can contain only letters and digits.\",\n                    minLength: \"The last name must be 3-30 characters long.\",\n                    maxLength: \"The last name must be 3-30 characters long.\",\n                },\n            },\n            {\n                label: \"Email Address\",\n                identifier: \"emailAddress\",\n                type: \"email_address\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The email address of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n                validations: \"isEmail\",\n                validationErrors: {\n                    isEmail: \"Please enter a valid email address.\",\n                },\n            },\n            {\n                label: \"Phone Number\",\n                identifier: \"phoneNumber\",\n                type: \"phone_number\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The phone number of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nconst companyForm = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Name\",\n                identifier: \"name\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The name of the company.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:3,maxLength:100\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The company name can contain only letters and digits.\",\n                    minLength:\n                        \"The conmpany name must be 3-100 characters long.\",\n                    maxLength:\n                        \"The company name must be 3-100 characters long.\",\n                },\n            },\n            {\n                label: \"Email Address\",\n                identifier: \"emailAddress\",\n                type: \"email_address\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The email address of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n                validations: \"isEmail\",\n                validationErrors: {\n                    isEmail: \"Please enter a valid email address.\",\n                },\n            },\n            {\n                label: \"Phone Number\",\n                identifier: \"phoneNumber\",\n                type: \"phone_number\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The phone number of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 1\",\n                identifier: \"addressLine1\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 2\",\n                identifier: \"addressLine2\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"City\",\n                identifier: \"city\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The city.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"State\",\n                identifier: \"state\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The state where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Country\",\n                identifier: \"country\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The country where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Zip Code\",\n                identifier: \"zipCode\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The zip code of the location where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Website\",\n                identifier: \"website\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The website of the company.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Industry\",\n                identifier: \"industry\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"business_service\",\n                        title: \"Business Service\",\n                    },\n                    {\n                        value: \"computer_software\",\n                        title: \"Computer Software\",\n                    },\n                    {\n                        value: \"computer_hardware\",\n                        title: \"Computer Hardware\",\n                    },\n                    {\n                        value: \"retail\",\n                        title: \"Retail\",\n                    },\n                    {\n                        value: \"education\",\n                        title: \"Education\",\n                    },\n                    {\n                        value: \"entertainment\",\n                        title: \"Entertainment\",\n                    },\n                    {\n                        value: \"finance_real_estate_insurance\",\n                        title: \"Finance, Real Estate, Insurance\",\n                    },\n                    {\n                        value: \"government\",\n                        title: \"Government\",\n                    },\n                    {\n                        value: \"healthcare\",\n                        title: \"Healthcare\",\n                    },\n                    {\n                        value: \"nonprofit\",\n                        title: \"Nonprofit\",\n                    },\n                    {\n                        value: \"telecommunications\",\n                        title: \"Telecommunications\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The industry which the company serves.\",\n                multipleValues: true,\n                defaultValue: null,\n            },\n        ],\n    },\n];\n\nconst securityForm = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Old Password\",\n                identifier: \"oldPassword\",\n                type: \"password\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The old password of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"New Password\",\n                identifier: \"newPassword\",\n                type: \"password\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The new password of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Confirm Password\",\n                identifier: \"confirmPassword\",\n                type: \"password\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The new password of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nexport default function Preferences() {\n    const classes = useStyles();\n    const [tabIndex, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div>\n            <WorkspaceToolbar title=\"Preferences\" />\n            <Grid container={true}>\n                <Grid item={true} xs={12} md={2}>\n                    <Card variant=\"outlined\" className={classes.card}>\n                        <CardContent className={classes.details}>\n                            <Tabs\n                                orientation=\"vertical\"\n                                variant=\"fullWidth\"\n                                value={tabIndex}\n                                onChange={handleChange}\n                                className={classes.tabs}\n                            >\n                                <Tab label=\"Profile\" />\n                                <Tab label=\"Security\" />\n                                <Tab label=\"Company\" />\n                            </Tabs>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item={true} xs={12} md={10}>\n                    <TabPanel value={tabIndex} index={0}>\n                        <PreferenceForms groups={profileForm} />\n                    </TabPanel>\n                    <TabPanel value={tabIndex} index={1}>\n                        <PreferenceForms groups={securityForm} />\n                    </TabPanel>\n                    <TabPanel value={tabIndex} index={2}>\n                        <PreferenceForms groups={companyForm} />\n                    </TabPanel>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n"],"sourceRoot":""}